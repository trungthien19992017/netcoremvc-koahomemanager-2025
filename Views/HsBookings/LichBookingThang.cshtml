

@{
    ViewData["Title"] = "L·ªãch booking th√°ng";
    Layout = "~/Views/Shared/_ContentNavbarLayout.cshtml";
    // var listcus = ViewBag.listcus as List<KOAHome.EntityFramework.HsCustomer>;
    var resultList = ViewBag.resultList as List<dynamic>;
    var displayList = ViewBag.displayList as List<dynamic>;

    // tao bien dem de dem row num cho report
    var reportRowIndex = 1;
}

@section VendorStyles {
	<link rel="stylesheet" href="~/vendor/libs/apex-charts/apex-charts.css" />
}

@section VendorScripts {
	<script src="~/vendor/libs/apex-charts/apexcharts.js"></script>
}

@section PageScripts {
    @* thong bao day *@
    <script src="~/js/ui-toasts.js"></script>
    @* validate, kem cac file js ho tro *@
    <script src="~/js/helper.js"></script>
    <script src="~/js/flatpickr.js"></script>
}
@section success
{
    @if (ViewBag.success != null)
    {

              <!-- Toast with Placements -->
        <div class="bs-toast toast  top-0 end-0 show toast-placement-ex1 m-2" style="position:absolute;" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="2000">
                <div class="toast-header">
                  <i class="ri-home-4-fill me-2 text-success"></i>
                  <div class="me-auto fw-medium">Th√¥ng b√°o</div><small class="text-muted">1 gi√¢y tr∆∞·ªõc</small>
                  <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body text-success">@ViewBag.success.</div>
              </div>
              <!-- Toast with Placements -->
    }
}

@section ErrorMessage
{
    @if (ViewBag.ErrorMessage != null)
    {
        <!-- Toast with Placements -->
        <div class="bs-toast toast  top-0 end-0 show toast-placement-ex1 m-2" style="position:absolute;" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="2000">
            <div class="toast-header">
                <i class="ri-home-4-fill me-2 text-danger"></i>
                <div class="me-auto fw-medium">Th√¥ng b√°o</div><small class="text-muted">1 gi√¢y tr∆∞·ªõc</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body text-danger">@ViewBag.ErrorMessage.</div>
        </div>
        <!-- Toast with Placements -->
    }
}

@* ************** Content ************** *@
<!-- Content wrapper -->
<div class="content-wrapper">
    <!-- Content -->
 <div class="container-xxl flex-grow-1 container-p-y">
  <h1 class ="mb-1">Danh s√°ch booking! üéâ</h1>
  <div class="row gy-6">
  @* Data Table new *@
  <!-- Data Tables -->
  <div class="col-xl-12">
	  <div class="card h-100">
		  <div class="card-header">
	  <div class="card overflow-hidden">
            <div class="card-body">
               <!-- Accordion -->
               <!-- phan mo rong de an hien bo loc-->
              <div class="row">
                <div class="col-md mb-6 mb-md-2">
                  <div class="accordion mt-4" id="accordionExample">
                    <div class="accordion-item active">
                      <h2 class="accordion-header" id="headingOne">
                        <button type="button" class="accordion-button collapsed" data-bs-toggle="collapse" data-bs-target="#accordionOne"  aria-expanded="true" aria-controls="accordionOne">
                          T√¨m ki·∫øm
                        </button>
                      </h2>
                      <div id="accordionOne" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                        <div class="accordion-body">
                        @* filter *@
                        <form method="get" asp-action="LichBookingThang" enctype="multipart/form-data">
                            <div class="row gx-3 gy-2 align-items-center">
                                <div class="col-md-4 form-floating form-floating-outline mb-6">
                                      <input class="form-control form-control-sm" type="date" placeholder="" id="TuNgay"  name="TuNgay" value="@Context.Request.Query["TuNgay"]" />
                                      <label for="TuNgay">T·ª´ ng√†y</label>
                                </div>
                                <div class="col-md-4 form-floating form-floating-outline mb-6">
                                      <input class="form-control form-control-sm" type="date" placeholder="" id="DenNgay"  name="DenNgay" value="@Context.Request.Query["DenNgay"]" />
                                      <label for="CheckInTo">ƒê·∫øn ng√†y</label>
                                </div>
                                 <div class="col-md-4 form-floating form-floating-outline mb-6">
                                        <select asp-items="ViewBag.LocNhanhOptions" class="form-select color-dropdown form-select-sm" placeholder="" id="LocNhanh"  name="LocNhanh">
                                            <option value="">Ch·ªçn</option>
                                        </select>
                                      <label for="LocNhanh">L·ªçc nhanh</label>
                                </div>
                            </div>
                      @* end filter *@
                      @* nut xem *@
                      <div class="row gx-3 gy-2 align-items-center">
                          <div class="col-md-12 d-flex justify-content-center">
                              <label class="form-label" for="showToastPlacement">&nbsp;</label>
                              <button type="submit" id="showToastPlacement" class="btn btn-primary d-block">Xem</button>
                          </div>
                      </div>  
                      @* end nut xem *@
                    </form>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <!--/ Accordion -->
<!--/             @* action top *@
              <div class="row gx-3 gy-2 align-items-center">
                  <div class="col-md-12 d-flex">
                      <div class="demo-inline-spacing">
                          <a asp-action="Create" type="button" class="btn btn-icon btn-primary" data-bs-toggle="tooltip" data-bs-offset="0,4" data-bs-placement="top" data-bs-html="true"
                              title="<i class='ri-add-line'></i> <span>Th√™m m·ªõi</span>">
                            <i class="ri-add-line"></i>
                          </a>
                          <a asp-action="Create" type="button" class="btn btn-icon btn-primary" data-bs-toggle="tooltip" data-bs-offset="0,4" data-bs-placement="top" data-bs-html="true"
                              title="<i class='ri-eye-line'></i> <span>M√¥ t·∫£</span>">
                            <i class="ri-eye-line"></i>
                          </a>
                      </div>
                  </div>
              </div>
              @* end action top *@
-->
          </div>
          @* end filter *@
          <div class="card-body">
             <small class="text-muted">C√≥ <strong>@ViewBag.Total</strong> k·∫øt qu·∫£ t√¨m ki·∫øm</small>
          </div>
          @* table *@
      <div class="card mb-6">
          <div class="card-body" id="vertical-example">
            <div class="table-responsive" style="max-height: 800px">
              <table border="1" cellpadding="5" cellspacing="0" style="width: 100%; text-align: center; table-layout: auto;" class="table table-sm table-bordered table-hover">
                <colgroup>
                    @* neu co cot isdisplay = 0 th√¨ count cot va dung visi.. ƒë·ªÉ ·∫©n c·ªôt *@
                    @if (displayList != null)
                    {
                      @foreach (var display in displayList.Where(p=> p.IsDisplay == false).OrderBy(p => p.ColNum ?? 0).ToList())
                      {
                        <col span="1" style="visibility: collapse">
                      }
                    }
                </colgroup>
                <thead class="freepanze-head">
                    <tr>
                      @* neu display khong null thi tiep tuc *@
                      @if (displayList != null)
					  {
                          @* voi moi cot dang co *@
                          @* neu cot isdisplay = false thi kh√¥ng hien thi (ch·ªâ l·∫•y gi√° tr·ªã)  *@
                          @foreach (var display in displayList.Where(p=> p.IsDisplay == false).OrderBy(p => p.ColNum ?? 0).ToList())
                          {
                            <th class="text-center" rowspan="2" data-code="@display.Code" data-index="@(display.ColNum ?? "0")">@Html.Raw(display.Name)</th>
                          }
                          @* neu cot khong co parent code cung khong phai is parent thi xu ly rieng *@
						  @foreach (var display in displayList.Where(p=> p.IsDisplay == true && p.IsParent == 0 && string.IsNullOrEmpty(p.ParentCode)).OrderBy(p => p.ColNum ?? 0).ToList())
                          {
                            @* co dinh cot neu co cau hinh (chi ap dung cho cot 1 rowspan) *@
                            <th class="text-center @(display.IsFreePane == true ? "freepanze-col" : "")" rowspan="2" data-code="@display.Code" data-index="@(display.ColNum ?? "0")" style="min-width:@(display.Width ?? "200")px;@(display.CssHeader ?? "")">@Html.Raw(display.Name)</th>
                          }
                          @* neu ton tai cot co isparent thi xu ly tiep cot 2 cap *@
                          @if (displayList.Any(p => p.IsParent == 1))
                          {
                            @* hien thi cot cha *@
						    @foreach (var display in displayList.Where(p=> p.IsDisplay == true && p.IsParent == 1).OrderBy(p => p.ColNum ?? 0).ToList())
                            {
                              @* dem so cot con de tinh colspan *@
                              var countChild = displayList.Count(p => p.ParentCode == display.Code);
                              @* neu co cot con thi xu ly tiep *@
                              if (countChild > 0)
                              {
                                <th class="text-center" colspan="@countChild"  data-code="@display.Code" style="@(display.CssHeader ?? "")">@Html.Raw(display.Name)</th>
                              }
                              
                            }
                          }
                      }
                    </tr>
                    <tr>
                      @* neu display khong null thi tiep tuc *@
                      @if (displayList != null)
					  {
                          @* voi moi cot dang co *@
                          @* neu ton tai cot co isparent thi xu ly tiep cot 2 cap *@
                          @if (displayList.Any(p => p.IsParent == 1))
                          {
                            @* hien thi cot cha *@
						    @foreach (var display in displayList.Where(p=> p.IsDisplay == true && p.IsParent == 1).OrderBy(p => p.ColNum ?? 0).ToList())
                            {
                              @* dem so cot con de tinh colspan *@
                              var countChild = displayList.Count(p => p.ParentCode == display.Code);
                              @* neu co cot con thi xu ly tiep *@
                              @if (countChild > 0)
                              {
                                @foreach (var displaychild in displayList.Where(p=> p.IsDisplay == true && p.ParentCode == display.Code).OrderBy(p => p.ColNum ?? 0).ToList())
                                {
                                    <th class="text-center" data-code="@display.Code" data-index="@(displaychild.ColNum ?? "0")" style="min-width:@(displaychild.Width ?? "200")px;@(displaychild.CssHeader ?? "")">@Html.Raw(displaychild.Name)</th>
                                }
                              }
                              
                            }
                          }
                      }
                    </tr>
                </thead>
                  <tbody class="overflow-auto">
                      @if (resultList != null && displayList != null)
                      {
                        @* voi moi dong resultlist *@
                        @foreach (var result in resultList)
                        {
                            var dictionary = (IDictionary<string, object>)result;
                            <tr>
                            @* voi moi cot dang co *@
                            @* neu cot isdisplay = false thi hien thi  *@
                            @foreach (var display in displayList.Where(p=> p.IsDisplay == false).OrderBy(p => p.ColNum ?? 0).ToList())
                            {
                                <td class="text-truncate">
                                    @{
                                        object value;
                                        if (dictionary.TryGetValue(display.Code, out value))
                                        {
                                            @Html.Raw(value)
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span> @* Gi√° tr·ªã m·∫∑c ƒë·ªãnh *@
                                        }
                                    }
                                </td>
                            }
                            @* neu cot khong co parent code cung khong phai is parent thi xu ly rieng *@
					        @foreach (var display in displayList.Where(p=> p.IsDisplay == true && p.IsParent == 0 && string.IsNullOrEmpty(p.ParentCode)).OrderBy(p => p.ColNum ?? 0).ToList())
                            {
                                @* neu isFreePane bang true thi them class freepanze-col *@
                                <td class="text-truncate @(display.IsFreePane == true ? "freepanze-col" : "")">
                                    @{
                                        object value;
                                        if (dictionary.TryGetValue(display.Code, out value))
                                        {
                                            @Html.Raw(value)
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span> @* Gi√° tr·ªã m·∫∑c ƒë·ªãnh *@
                                        }
                                    }
                                </td>
                            }
                            @* neu ton tai cot co isparent thi xu ly tiep cot 2 cap *@
                            @if (displayList.Any(p => p.IsParent == 1))
                            {
                              @* hien thi cot cha *@
						      @foreach (var display in displayList.Where(p=> p.IsDisplay == true && p.IsParent == 1).OrderBy(p => p.ColNum ?? 0).ToList())
                              {
                                @* dem so cot con de tinh colspan *@
                                var countChild = displayList.Count(p => p.ParentCode == display.Code);
                                @* neu co cot con thi xu ly tiep *@
                                if (countChild > 0)
                                {
                                  @foreach (var displaychild in displayList.Where(p=> p.IsDisplay == true && p.ParentCode == display.Code).OrderBy(p => p.ColNum ?? 0).ToList())
                                  {
                                      <td class="text-truncate">
                                          @{
                                              object value;
                                              if (dictionary.TryGetValue(displaychild.Code, out value))
                                              {
                                                  @Html.Raw(value)
                                              }
                                              else
                                              {
                                                  <span class="text-muted">N/A</span> @* Gi√° tr·ªã m·∫∑c ƒë·ªãnh *@
                                              }
                                          }
                                      </td>
                                  }
                                }
                              
                              }
                            }
                          </tr>

                          reportRowIndex ++;
                        }
                      }
                  </tbody>
            </table>
		  </div>
        </div>
      </div>
      @* end table *@
	  </div>
     </div>
    </div>
    </div>
  @* end data table new *@
   </div>
 </div>
    <!-- Content wrapper -->
</div>
