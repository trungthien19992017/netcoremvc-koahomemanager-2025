@using KOAHome.Helpers
@using System.Text.Json
@{
    Layout = "~/Views/Shared/_ContentNavbarLayout.cshtml";
    var resultList = ViewData["resultList"] as List<dynamic>;

    // truyen cau hinh report de xu ly giao dien
    var report = ViewData["report"] as IDictionary<string, object>;
    string ReportCode = ViewData["ReportCode"] as string;

    // truyen danh sach gia tri loc len giao dien
    var listFilterValue = ViewData["ListFilterValue"] as IDictionary<string, object>;
    var listFilterConfig = ViewData["ListFilterConfig"] as List<dynamic>;
    var dynamicServiceSelectOptions = ViewData["DynamicServiceSelectOptions"] as Dictionary<string, List<SelectListItem>>;

    // truyen danh sach gia tri cot du lieu len giao dien
    var displayList = ViewData["displayList"] as List<dynamic>;
    // tính cấp cha con display
    int displayParentLevelNum = Convert.ToInt32(ViewData["displayParentLevelNum"]);

    // truyen danh sach gia tri action du lieu len giao dien
    var actionlistdetailList = ViewData["actionlistdetailList"] as List<dynamic>;
    // phan biet action top va grid
    var actionlistdetailList_top = actionlistdetailList.Where(p => p.IsTop == true).ToList();
    var actionlistdetailList_grid = actionlistdetailList.Where(p => p.IsTop == null || p.IsTop == false).ToList();

    // tao bien dem de dem row num cho report
    var reportRowIndex = 1;

    // tra ve title cho page
    ViewData["Title"] = listFilterValue.ContainsKey("title") ? listFilterValue["title"] : report.ContainsKey("Name") ? report["Name"] : "Danh sách";

}

@section VendorStyles {
    <link rel="stylesheet" href="~/vendor/libs/apex-charts/apex-charts.css" />
}

@section VendorScripts {
    <script src="~/vendor/libs/apex-charts/apexcharts.js"></script>
}

@section PageScripts {
    <script src="~/js/dashboards-analytics.js"></script>
    @* thong bao day *@
    <script src="~/js/ui-toasts.js"></script>
    @* validate, kem cac file js ho tro *@
    <script src="~/js/helper.js"></script>
    <script src="~/js/flatpickr.js"></script>
    <script src="~/js/form-validation.js"></script>
    <script src="~/js/ui-popover.js"></script>

    @* xử lý hiển thị form popup  *@
    <script>
         $(document).ready(function () {
            // Khi modal được mở
 
          $(document).on('click', '.popupform-action', function (e) {
              const $btn = $(this);
              const actionlink = $btn.data('actionlink') ?? null;
              const id = $btn.data('id') ?? "";
              const formCode = $btn.data('formcode') ?? "";
              const isReadOnly = $btn.data('isreadonly') ?? false;
              const queryParams = new URLSearchParams(window.location.search).toString(); // lấy full query string

              // có 2 cách lấy, 1 là lấy từ link, 2  là lấy từ form code và id
              let url = ""
              if (actionlink != null){
                url = actionlink;
                if (queryParams !== "") {
                    url += (actionlink.includes('?') ? '&' : '?') + queryParams;
                }
              }
              else{
                url = `/form/popup-viewer/${formCode}/${id}?${queryParams}&isReadOnly=${isReadOnly}`;
              }

              $('#modal-PopupForm').html('<div class="text-center">Đang tải...</div>');

              // Gọi tới endpoint ViewComponent
              $.get(url, function (result) {
                  $('#modal-PopupForm').html(result);
              });
          });
        });


    </script>
}
@section success
{
    @if (ViewData["success"] != null)
{

        <!-- Toast with Placements -->
        <div class="bs-toast toast  top-0 end-0 show toast-placement-ex1 m-2" style="position:absolute;" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="2000">
            <div class="toast-header">
                <i class="ri-home-4-fill me-2 text-success"></i>
                <div class="me-auto fw-medium">Thông báo</div><small class="text-muted">1 giây trước</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body text-success">@ViewData["success"].</div>
        </div>
        <!-- Toast with Placements -->
    }
}

@section ErrorMessage
{
    @if (ViewData["ErrorMessage"] != null)
    {
        <!-- Toast with Placements -->
        <div class="bs-toast toast  top-0 end-0 show toast-placement-ex1 m-2" style="position:absolute;" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="2000">
            <div class="toast-header">
                <i class="ri-home-4-fill me-2 text-danger"></i>
                <div class="me-auto fw-medium">Thông báo</div><small class="text-muted">1 giây trước</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body text-danger">@ViewData["ErrorMessage"].</div>
        </div>
        <!-- Toast with Placements -->
    }
}


@* ************** Content ************** *@
<!-- Content wrapper -->
<div class="content-wrapper">
    <!-- Content -->
    <div class="container-xxl flex-grow-1 container-p-y">
        <h1 class="mb-1" id="header-title">@(listFilterValue.ContainsKey("title") ? listFilterValue["title"] : report.ContainsKey("Name") ? report["Name"] : "Danh sách")</h1>
        <div class="row gy-6">
            @* Data Table new *@
            <!-- Data Tables -->
            <div class="col-xl-12">
                <div class="card h-100">
                    <div class="card-header">
                        <div class="card overflow-hidden">
                            <div class="card-body">
                                <!-- Accordion -->
                                <!-- phan mo rong de an hien bo loc-->
                                <div class="row">
                                    <div class="col-md mb-6 mb-md-2">
                                        <div class="accordion mt-4" id="accordionExample">
                                            <div class="accordion-item active">
                                                <h2 class="accordion-header" id="headingOne">
                                                    <button type="button" class="accordion-button collapsed" data-bs-toggle="collapse" data-bs-target="#accordionOne" aria-expanded="true" aria-controls="accordionOne">
                                                        Tìm kiếm
                                                    </button>
                                                </h2>
                                                <div id="accordionOne" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                                                    <div class="accordion-body">
                                                        @* filter *@
                                                        <form method="get" class="needs-validation" novalidate="" action="/report/viewer-utility/@ReportCode" enctype="multipart/form-data">
                                                            @* report code mac dinh truyen vao bo loc *@
                                                            <div class="row gx-3 gy-2 align-items-center">
                                                                @* xu ly filter dong *@
                                                                @foreach (var filter in listFilterConfig.OrderBy(p => p.OrderId).ToList())
                                                                {
                                                                    @* name: Key cua filter truyen vao, label: Ten filter, type: Loại filter, value: giá trị filter
                                                                    , colspan: độ rộng filter *@
                                                                    string name = filter.Code;
                                                                    string label = filter.Name;
                                                                    string type = filter.DynamicFieldName;
                                                                    var value = listFilterValue.ContainsKey(name) ? listFilterValue[name] : "";
                                                                    int colspan = Convert.ToInt32(filter.ColSpan);

                                                                    @* neu colspan = 0 thi mac dinh = 4, neu khong thi lay colspan *@
                                                                    <div class="col-md-@(Convert.ToInt32(filter.ColSpan) == 0 ? "4" : @filter.ColSpan) form-floating form-floating-outline mb-6">
                                                                        @if (type == "TEXT BOX")
                                                                        {
                                                                            <input class="form-control form-control-sm" type="text" id="@name" name="@name" value="@value" @(filter.Required == true ? "required" : "") />
                                                                        }
                                                                        else if (type == "DATE BOX")
                                                                        {
                                                                            <input class="form-control form-control-sm" type="date" id="@name" name="@name" value="@value" @(filter.Required == true ? "required" : "")/>
                                                                        }
                                                                        else if (type == "SELECT BOX")
                                                                        {
                                                                            @* check selected cho item dung voi gia tri *@
                                                                            var selectList = dynamicServiceSelectOptions[name] as List<SelectListItem> ?? new List<SelectListItem>();
                                                                            @foreach (var item in selectList)
                                                                            {
                                                                                if (value != null)
                                                                                {
                                                                                  item.Selected = (item.Value.ToString() == value.ToString()); // currentValue là giá trị đang được chọn
                                                                                }
                                                                            }
                                                                            var selectAttributes = new Dictionary<string, object>
                                                                            {
                                                                                { "class", "form-select color-dropdown form-select-sm" },
                                                                                { "id", name },
                                                                                { "name", name }
                                                                            };

                                                                            // neu bat buoc thi them truong bat buoc
                                                                            if (filter.Required == true)
                                                                            {
                                                                                selectAttributes["required"] = "required";
                                                                            }

                                                                            @Html.DropDownList(name, selectList, "-- Chọn --", selectAttributes)
                                                                        }
                                                                        else if (type == "TREEVIEW MULTIPLE")
                                                                        {
                                                                            @* check selected cho item dung voi gia tri *@
                                                                            var selectList = dynamicServiceSelectOptions[name] as List<SelectListItem> ?? new List<SelectListItem>();
                                                                            @foreach (var item in selectList)
                                                                            {
                                                                                if (value != null)
                                                                                {
                                                                                  item.Selected = (item.Value.ToString() == value.ToString()); // currentValue là giá trị đang được chọn
                                                                                }
                                                                            }
                                                                            var selectAttributes = new Dictionary<string, object>
                                                                            {
                                                                                { "class", "form-select color-dropdown form-select-sm" },
                                                                                { "id", name },
                                                                                { "name", name },
                                                                                { "multiple", "multiple" }
                                                                            };

                                                                            // neu bat buoc thi them truong bat buoc
                                                                            if (filter.Required == true)
                                                                            {
                                                                                selectAttributes["required"] = "required";
                                                                            }

                                                                            @Html.DropDownList(name, selectList, "-- Chọn --", selectAttributes)
                                                                        }
                                                                        <label for="@name">@label</label>
                                                                        <div class="valid-feedback"> Chính xác! </div>
                                                                        <div class="invalid-feedback"> Không được bỏ trống. </div>
                                                                    </div>
                                                                }
                                                            
                                                            </div>
                                                            @* end filter *@
                                                            @* nut xem *@
                                                            <div class="row gx-3 gy-2 align-items-center">
                                                                <div class="col-md-12 d-flex justify-content-center">
                                                                    <label class="form-label" for="showToastPlacement">&nbsp;</label>
                                                                    <button type="submit" id="showToastPlacement" class="btn btn-primary d-block">Xem</button>
                                                                </div>
                                                            </div>
                                                            @* end nut xem *@
                                                        </form>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!--/ Accordion -->
                                @* action top *@
                                <div class="row gx-3 gy-2 align-items-center">
                                    <div class="col-md-12 d-flex">
                                        <div class="demo-inline-spacing table-action">
                                            <a asp-controller="NETForm" asp-action="Viewer" asp-route-formCode="F0_HS_Booking1" type="button" class="btn btn-icon btn-primary" data-bs-toggle="tooltip" data-bs-offset="0,4" data-bs-placement="top" data-bs-html="true"
                                               title="<i class='ri-add-line'></i> <span>Thêm mới</span>">
                                                <i class="ri-add-line"></i>
                                            </a>
                                            <a asp-action="Create" type="button" class="btn btn-icon btn-primary" data-bs-toggle="tooltip" data-bs-offset="0,4" data-bs-placement="top" data-bs-html="true"
                                               title="<i class='ri-eye-line'></i> <span>Mô tả</span>">
                                                <i class="ri-eye-line"></i>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                @* end action top *@
                            </div>
                            @* end filter *@
                              <div class="card-body">
                                    @* action top *@
                                    <div class="gx-3 gy-2 align-items-center report-top-action">
                                    </div>
                                    @* end action top *@
                                    <div class="d-flex justify-content-between align-items-center mt-3">
                                        @* hien thi so dong duoc hien thi *@
                                        <div class="report-info d-flex gap-2"></div>
                                    </div>
                              </div>
                              @* table *@
                          <div class="card mb-6">
                              <div class="card-body" id="vertical-example">
                                <div class="table-responsive" style="max-height: 400px">
                                  <table border="1" cellpadding="5" cellspacing="0" style="width: 100%; text-align: center; table-layout: auto;" class="table table-sm table-bordered table-hover display table-with-exportexcel" >
                                    <thead class="freepanze-head">
                                        <tr>
                                          @* neu display khong null thi tiep tuc *@
                                          @if (displayList != null)
					                      {
                                              @* voi moi cot dang co *@
                                              @* neu cot isdisplay = false thi không hien thi (chỉ lấy giá trị)  *@
                                              @foreach (var display in displayList.Where(p=> p.IsDisplay == false).OrderBy(p => p.ColNum ?? 0).ToList())
                                              {
                                                <th class="text-center d-none" rowspan="@displayParentLevelNum" data-code="@display.Code" data-index="@(display.ColNum ?? "0")" data-isexport="@(display.IsExport ?? "True")">@Html.Raw(display.Name)</th>
                                              }
                                              @* hien thi cot stt dau tien neu co *@
						                      @foreach (var display in displayList.Where(p=> p.IsDisplay == true && p.Code == "stt" && p.IsParent == false && string.IsNullOrEmpty(p.ParentCode)).OrderBy(p => p.ColNum ?? 0).ToList())
                                              {
                                                @* co dinh cot neu co cau hinh (chi ap dung cho cot 1 rowspan) *@
                                                <th class="text-center @(display.IsFreePane == true ? "freepanze-col" : "")" rowspan="@displayParentLevelNum" data-code="@display.Code" data-index="@(display.ColNum ?? "0")"  data-isexport="@(display.IsExport ?? "True")" style="min-width:@((display.Width ?? "200") + "px");@(display.CssHeader ?? "")">@Html.Raw(display.Name)</th>
                                              }
                                              @* them mot cot xu ly *@
						                        <th class="text-center" data-code="HandleColumn" data-index="2" rowspan="@displayParentLevelNum" data-isexport="False" style="width:50px" >Xử lý</th>
                                              @* neu cot khong co parent code cung khong phai is parent thi xu ly rieng *@
						                      @foreach (var display in displayList.Where(p=> p.IsDisplay == true && p.Code != "stt" && p.IsParent == false && string.IsNullOrEmpty(p.ParentCode)).OrderBy(p => p.ColNum ?? 0).ToList())
                                              {
                                                @* co dinh cot neu co cau hinh (chi ap dung cho cot 1 rowspan) *@
                                                <th class="text-center @(display.IsFreePane == true ? "freepanze-col" : "")" rowspan="@displayParentLevelNum" data-code="@display.Code" data-index="@(display.ColNum ?? "0")"  data-isexport="@(display.IsExport ?? "True")" style="min-width:@((display.Width ?? "200") + "px");@(display.CssHeader ?? "")">@Html.Raw(display.Name)</th>
                                              }
                                              @* neu ton tai cot co isparent thi xu ly tiep cot 2 cap *@
                                              @if (displayList.Any(p => p.IsParent == true))
                                              {
                                                @* hien thi cot cha *@
						                                    @foreach (var display in displayList.Where(p=> p.IsDisplay == true && p.IsParent == true).OrderBy(p => p.ColNum ?? 0).ToList())
                                                {
                                                  @* dem so cot con de tinh colspan *@
                                                  var countChild = displayList.Count(p => p.ParentCode == display.Code);
                                                  @* neu co cot con thi xu ly tiep *@
                                                  if (countChild > 0)
                                                  {
                                                    <th class="text-center" colspan="@countChild"  data-code="@display.Code"  data-isexport="@(display.IsExport ?? "True")" style="@(display.CssHeader ?? "")">@Html.Raw(display.Name)</th>
                                                  }
                              
                                                }
                                              }
                                          }
                                        </tr>
                                         @* neu co cap cha con thi tiep tuc *@
                                        @if (displayParentLevelNum > 1)
                                        {
                                        <tr>
                                          @* neu display khong null thi tiep tuc *@
                                          @if (displayList != null)
					                      {
                                              @* voi moi cot dang co *@
                                              @* neu ton tai cot co isparent thi xu ly tiep cot 2 cap *@
                                              @if (displayList.Any(p => p.IsParent == true))
                                              {
                                                @* hien thi cot cha *@
						                        @foreach (var display in displayList.Where(p=> p.IsDisplay == true && p.IsParent == true).OrderBy(p => p.ColNum ?? 0).ToList())
                                                {
                                                  @* dem so cot con de tinh colspan *@
                                                  var countChild = displayList.Count(p => p.ParentCode == display.Code);
                                                  @* neu co cot con thi xu ly tiep *@
                                                  @if (countChild > 0)
                                                  {
                                                    @foreach (var displaychild in displayList.Where(p=> p.IsDisplay == true && p.ParentCode == display.Code).OrderBy(p => p.ColNum ?? 0).ToList())
                                                    {
                                                        <th class="text-center" data-code="@display.Code" data-index="@(displaychild.ColNum ?? "0")" data-isexport="@(displaychild.IsExport ?? "True")" style="min-width:@(displaychild.Width ?? "200")px;@(displaychild.CssHeader ?? "")">@Html.Raw(displaychild.Name)</th>
                                                    }
                                                  }
                              
                                                }
                                              }
                                          }
                                        </tr>
                                        }
                                    </thead>
                                      <tbody class="overflow-auto">
                                          @if (resultList != null && displayList != null)
                                          {
                                            @* voi moi dong resultlist *@
                                            @foreach (var result in resultList)
                                            {
                                                var dictionary = (IDictionary<string, object>)result;
                                                var Id = dictionary.ContainsKey("Id") ? Convert.ToInt32(dictionary["Id"]) : 0;
                                                @* lay gia tri to mau background row (BGColorRowClass) *@
                                                var bgColorRowClass = dictionary.ContainsKey("BGColorRowClass") ? Convert.ToString(dictionary["BGColorRowClass"]) : "";

                                                <tr class="@bgColorRowClass">
                                                @* voi moi cot dang co *@
                                                @* neu cot isdisplay = false thi khong hien thi  *@
                                                @foreach (var display in displayList.Where(p=> p.IsDisplay == false).OrderBy(p => p.ColNum ?? 0).ToList())
                                                {
                                                    <td class="@FormatHelper.ParseTextAlignToClass(display.TextAlign) d-none" data-isexport="@(display.IsExport ?? "True")">
                                                        @{
                                                            object value;
                                                            if (dictionary.TryGetValue(display.Code, out value))
                                                            {
                                                                @Html.Raw(value)
                                                            }
                                                            else
                                                            {
                                                                <span class="text-muted">N/A</span> @* Giá trị mặc định *@
                                                            }
                                                        }
                                                    </td>
                                                }
                                                @* hien thi cot stt dau tien neu co *@
					                            @foreach (var display in displayList.Where(p=> p.IsDisplay == true && p.Code == "stt" && p.IsParent == false && string.IsNullOrEmpty(p.ParentCode)).OrderBy(p => p.ColNum ?? 0).ToList())
                                                {
                                                    @* neu isFreePane bang true thi them class freepanze-col *@
                                                    <td class="text-center @(display.IsFreePane == true ? "freepanze-col" : "")" data-isexport="@(display.IsExport ?? "True")">
                                                        @{
                                                            object value;
                                                            if (dictionary.TryGetValue(display.Code, out value))
                                                            {
                                                               @Html.Raw(value);
                                                            }
                                                            else
                                                            {
                                                                <span class="text-muted">N/A</span> @* Giá trị mặc định *@
                                                            }
                                                        }
                                                    </td>
                                                }
                                                @* them cot xu ly *@
							                     <td class="text-center" data-isexport="False"> 
                                                  <div class="demo-inline-spacing">
                                                    <div class="btn-group" id="dropdown-icon-demo">
                                                      <button type="button" class="btn btn-primary btn-xs dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"><i class="ri-align-justify me-1"></i></button>
                                                      <ul class="dropdown-menu overflow-auto" style="max-height:200px">
                                                        @foreach(var action in actionlistdetailList_grid.OrderBy(p=> p.ActionListDetailOrderId).ToList())
                                                        {
                                                          var actionDict = (IDictionary<string, object>)action;
                                                          string actionName = actionDict.ContainsKey("ActionName") ? (actionDict["ActionName"].ToString() ?? "") : "";
                                                          string actionIcon = actionDict.ContainsKey("ActionIcon") ? (actionDict["ActionIcon"].ToString() ?? "") : "";
                                                          string actionType = actionDict["Type"].ToString() ?? "";
                                                          string actionValue = actionDict["Value"].ToString() ?? "";

                                                          if (actionType == "LINK")
                                                          {
                                                            string url = ParseDataHelper.GetReplaceLinkWithResult(actionValue, dictionary);
                                                            <li>
                                                                <a href="@url" class="dropdown-item"><i class="@(actionIcon + " me-1 text-primary")"></i> @actionName</a>
                                                            </li>
                                                          }
                                                          else if (actionType == "STORE")
                                                          {
                                                            string actionStore = actionValue;
                                                            // cac thong tin xac nhan, neu co thi truyen vao action
                                                            bool isPopupConfirm = Convert.ToBoolean(actionDict["IsPopupConfirm"]);
                                                            int? dataSourceID  = actionDict.TryGetValue("DataSourceID", out var num) && num is int val ? Convert.ToInt32(num) : null;
                                                            string confirmButtonText = !string.IsNullOrWhiteSpace(actionDict["ConfirmButtonText"].ToString()) ? actionDict["ConfirmButtonText"].ToString() : null;
                                                            string confirmTitle = !string.IsNullOrWhiteSpace(actionDict["ConfirmTitle"].ToString()) ? actionDict["ConfirmTitle"].ToString() : null;
                                                            string confirmText = !string.IsNullOrWhiteSpace(actionDict["ConfirmText"].ToString()) ? actionDict["ConfirmText"].ToString() : null;
                                                            <li>
                                                              @if (isPopupConfirm){
                                                                <a href="" data-id="@Id" data-isconfirm="@isPopupConfirm" data-confirmtext="@confirmText" data-confirmtitle ="@confirmTitle" data-confirmbutton ="@confirmButtonText" data-sqlstore="@actionStore" data-datasourceid="@dataSourceID" class="dropdown-item confirmAction"><i class="@(actionIcon + " me-1 text-primary")"></i> @actionName</a>
                                                              }
                                                              else{
                                                                <a href="" data-id="@Id" data-sqlstore="@actionStore" data-datasourceid="@dataSourceID" class="dropdown-item confirmAction"><i class="@(actionIcon + " me-1 text-primary")"></i> @actionName</a>
                                                              }
                                                            </li>
                                                          }
                                                          else if (actionType == "POPUPFORM")
                                                          {
                                                            var popupDictValue = ParseDataHelper.GetReplacePopupLinkWithResult(actionValue, dictionary);
                                                            string actionFormCode = popupDictValue.ContainsKey("FORMCODE") ? popupDictValue["FORMCODE"].ToString() ?? "" : "";
                                                            string actionLink = popupDictValue.ContainsKey("LINK") ? popupDictValue["LINK"].ToString() ?? "" : "";
                                                            <li>
                                                              <a href="" data-bs-toggle="modal" data-bs-target="#modal-PopupForm" data-actionlink = "@actionLink" class="dropdown-item popupform-action"><i class="@(actionIcon + " me-1 text-primary")"></i> @actionName</a>
                                                            </li>
                                                          }
                                                          else
                                                          {
                                                            <li>
                                                                <a asp-action="DichVuPhatSinh" asp-route-id="@Id" class="dropdown-item"><i class="@(actionIcon + " me-1 text-primary")"></i> @actionName</a>
                                                            </li>
                                                          }
                                                        }
                                                      </ul>
                                                    </div>
                                                  </div>
							                    </td>
                                                @* neu cot khong co parent code cung khong phai is parent thi xu ly rieng *@
					                            @foreach (var display in displayList.Where(p=> p.IsDisplay == true && p.Code != "stt" && p.IsParent == false && string.IsNullOrEmpty(p.ParentCode)).OrderBy(p => p.ColNum ?? 0).ToList())
                                                {
                                                    var displayType = display.Type as string ?? "link";
                                                    var displayFormat = display.Format as string ?? "";
                                                    @* neu isFreePane bang true thi them class freepanze-col *@
                                                    <td class="@FormatHelper.ParseTextAlignToClass(display.TextAlign) @(display.IsFreePane == true ? "freepanze-col" : "")" data-isexport="@(display.IsExport ?? "True")" data-displaytype="@displayType" data-displayformat="@displayFormat">
                                                        @{
                                                            object value;
                                                            if (dictionary.TryGetValue(display.Code, out value))
                                                            {
                                                                string valueType = "";
                                                                // kiem tra kieu du lieu cua value
                                                                if (@value != null)
                                                                {
                                                                   valueType = value.GetType().ToString();
                                                                }
                                                                // kiem tra kieu du lieu cua display
                                                                string[] stringVavlidType = ["string", "date", "datetime", "int", "long", "float", "textarea"];
                                                                // uu tien kiem tra kieu du lieu cua value roi den display
                                                                // neu kieu du lieu cua value la boolean thi su dung check box
                                                                @if (valueType == "System.Boolean")
                                                                {
									                                <input type="checkbox" @(Convert.ToBoolean(value) ? "checked" : "") disabled />
                                                
                                                                }
                                                                else if (displayType == "icons")
                                                                {
                                                                    var iconsJson = value?.ToString()?.Trim() ?? "";

                                                                    // Nếu rỗng thì bỏ qua
                                                                    if (!string.IsNullOrEmpty(iconsJson))
                                                                    {
                                                                      // Đảm bảo chuỗi JSON luôn là mảng
                                                                      if (iconsJson.TrimStart().StartsWith("{"))
                                                                      {
                                                                          iconsJson = "[" + iconsJson + "]";
                                                                      }

                                                                      try
                                                                      {
                                                                          var icons = JsonSerializer.Deserialize<List<JsonElement>>(iconsJson);

                                                                          <ul class="list-unstyled m-0 avatar-group d-flex align-items-center">
                                                                          @foreach (var icon in icons)
                                                                          {
                                                                              var title = icon.GetProperty("title").GetString();
                                                                              var image = icon.GetProperty("image").GetString();
                                                                              <li data-bs-toggle="tooltip"
                                                                                  data-popup="tooltip-custom"
                                                                                  data-bs-placement="top"
                                                                                  class="avatar avatar-xs pull-up"
                                                                                  aria-label="@title"
                                                                                  data-bs-original-title="@title">
                                                                                  <img src="@image" alt="Avatar" class="rounded-circle" />
                                                                              </li>
                                                                          }
                                                                          </ul>
                                                                      }
                                                                      catch (Exception ex)
                                                                      {
                                                                          <span class="text-danger">N/A</span>
                                                                      }
                                                                    }
                                                                }
                                                                // neu dang file thi hien thi icon tải nhiều file
                                                                else if (displayType == "file")
                                                                {
                                                                    var filesJson = value?.ToString()?.Trim() ?? "";

                                                                    // Nếu rỗng thì bỏ qua
                                                                    if (!string.IsNullOrEmpty(filesJson))
                                                                    {
                                                                        // Nếu là object đơn, bao lại thành mảng
                                                                        if (filesJson.StartsWith("{"))
                                                                        {
                                                                            filesJson = "[" + filesJson + "]";
                                                                        }

                                                                        try
                                                                        {
                                                                            var fileList = JsonSerializer.Deserialize<List<JsonElement>>(filesJson);

                                                                            if (fileList?.Count > 0)
                                                                            {
                                                                                <div class="d-flex flex-wrap gap-1">
                                                                                    @foreach (var file in fileList)
                                                                                    {
                                                                                        var fileName = file.GetProperty("fileName").GetString();
                                                                                        var url = file.GetProperty("url").GetString();
                                                                                        var displayName = fileName?.Length > 50 ? fileName.Substring(0, 50) + "..." : fileName;

                                                                                        <a href="@url" download class="btn btn-sm btn-outline-primary file-download-link" title="@fileName">
                                                                                            <i class="ri-download-2-fill"></i> @displayName
                                                                                        </a>
                                                                                    }
                                                                                </div>
                                                                            }
                                                                        }
                                                                        catch
                                                                        {
                                                                            <span class="text-danger">Lỗi định dạng file JSON</span>
                                                                        }
                                                                    }
                                                                }
                                                                // neu la kieu link thi parse thanh html
                                                                else if (displayType == "link")
                                                                {
                                                                    @Html.Raw(value);
                                                                }
                                                                // neu la kieu du lieu co the format duoc
                                                                else if (stringVavlidType.Contains(displayType))
                                                                {
                                                                    @* kiem tra neu co format thi format lai chuoi *@
                                                                    var displayValue = @FormatHelper.FormatDynamicValue(value, displayFormat);
                                                                    <span style="white-space: pre-wrap">@displayValue</span>
                                                
                                                                }
                                                                else
                                                                {
                                                                    @Html.Raw(value);
                                                                }                                              }
                                                            else
                                                            {
                                                                <span class="text-muted">N/A</span> @* Giá trị mặc định *@
                                                            }
                                                        }
                                                    </td>
                                                }
                                                @* neu ton tai cot co isparent thi xu ly tiep cot 2 cap *@
                                                @if (displayList.Any(p => p.IsParent == true))
                                                {
                                                  @* hien thi cot cha *@
						                                      @foreach (var display in displayList.Where(p=> p.IsDisplay == true && p.IsParent == true).OrderBy(p => p.ColNum ?? 0).ToList())
                                                  {
                                                    @* dem so cot con de tinh colspan *@
                                                    var countChild = displayList.Count(p => p.ParentCode == display.Code);
                                                    @* neu co cot con thi xu ly tiep *@
                                                    if (countChild > 0)
                                                    {
                                                      @foreach (var displaychild in displayList.Where(p=> p.IsDisplay == true && p.ParentCode == display.Code).OrderBy(p => p.ColNum ?? 0).ToList())
                                                      {
                                                          var displayType = displaychild.Type as string ?? "link";
                                                          var displayFormat = displaychild.Format as string ?? "";
                                                          <td class="@FormatHelper.ParseTextAlignToClass(displaychild.TextAlign)" data-isexport="@(displaychild.IsExport ?? "0")" data-displaytype="@displayType" data-displayformat="@displayFormat">
                                                              @{
                                                                  object value;
                                                                  if (dictionary.TryGetValue(displaychild.Code, out value))
                                                                  {
                                                                      string valueType = "";
                                                                      // kiem tra kieu du lieu cua value
                                                                      if (@value != null)
                                                                      {
                                                                         valueType = value.GetType().ToString();
                                                                      }
                                                                      // kiem tra kieu du lieu cua display
                                                                      string[] stringVavlidType = ["string", "date", "datetime", "int", "long", "float", "textarea"];
                                                                      // uu tien kiem tra kieu du lieu cua value roi den display
                                                                      // neu kieu du lieu cua value la boolean thi su dung check box
                                                                      @if (valueType == "System.Boolean")
                                                                      {
									                                                        <input type="checkbox" @(Convert.ToBoolean(value) ? "checked" : "") disabled />
                                                
                                                                      }
                                                                      else if (displayType == "icons")
                                                                      {
                                                                          var iconsJson = value?.ToString()?.Trim() ?? "";

                                                                          // Nếu rỗng thì bỏ qua
                                                                          if (!string.IsNullOrEmpty(iconsJson))
                                                                          {
                                                                            // Đảm bảo chuỗi JSON luôn là mảng
                                                                            if (iconsJson.TrimStart().StartsWith("{"))
                                                                            {
                                                                                iconsJson = "[" + iconsJson + "]";
                                                                            }

                                                                            try
                                                                            {
                                                                                var icons = JsonSerializer.Deserialize<List<JsonElement>>(iconsJson);

                                                                                <ul class="list-unstyled m-0 avatar-group d-flex align-items-center">
                                                                                @foreach (var icon in icons)
                                                                                {
                                                                                    var title = icon.GetProperty("title").GetString();
                                                                                    var image = icon.GetProperty("image").GetString();
                                                                                    <li data-bs-toggle="tooltip"
                                                                                        data-popup="tooltip-custom"
                                                                                        data-bs-placement="top"
                                                                                        class="avatar avatar-xs pull-up"
                                                                                        aria-label="@title"
                                                                                        data-bs-original-title="@title">
                                                                                        <img src="@image" alt="Avatar" class="rounded-circle" />
                                                                                    </li>
                                                                                }
                                                                                </ul>
                                                                            }
                                                                            catch (Exception ex)
                                                                            {
                                                                                <span class="text-danger">N/A</span>
                                                                            }
                                                                          }
                                                                      }
                                                                      // neu dang file thi hien thi icon tải nhiều file
                                                                      else if (displayType == "file")
                                                                      {
                                                                          var filesJson = value?.ToString()?.Trim() ?? "";

                                                                          // Nếu rỗng thì bỏ qua
                                                                          if (!string.IsNullOrEmpty(filesJson))
                                                                          {
                                                                              // Nếu là object đơn, bao lại thành mảng
                                                                              if (filesJson.StartsWith("{"))
                                                                              {
                                                                                  filesJson = "[" + filesJson + "]";
                                                                              }

                                                                              try
                                                                              {
                                                                                  var fileList = JsonSerializer.Deserialize<List<JsonElement>>(filesJson);

                                                                                  if (fileList?.Count > 0)
                                                                                  {
                                                                                      <div class="d-flex flex-wrap gap-1">
                                                                                          @foreach (var file in fileList)
                                                                                          {
                                                                                              var fileName = file.GetProperty("fileName").GetString();
                                                                                              var url = file.GetProperty("url").GetString();
                                                                                              var displayName = fileName?.Length > 50 ? fileName.Substring(0, 50) + "..." : fileName;

                                                                                              <a href="@url" download class="btn btn-sm btn-outline-primary file-download-link" title="@fileName">
                                                                                                  <i class="ri-download-2-fill"></i> @displayName
                                                                                              </a>
                                                                                          }
                                                                                      </div>
                                                                                  }
                                                                              }
                                                                              catch
                                                                              {
                                                                                  <span class="text-danger">Lỗi định dạng file JSON</span>
                                                                              }
                                                                          }
                                                                      }
                                                                      // neu la kieu link thi parse thanh html
                                                                      else if (displayType == "link")
                                                                      {
                                                                          @Html.Raw(value);
                                                                      }
                                                                      // neu la kieu du lieu co the format duoc
                                                                      else if (stringVavlidType.Contains(displayType))
                                                                      {
                                                                          @* kiem tra neu co format thi format lai chuoi *@
                                                                          var displayValue = @FormatHelper.FormatDynamicValue(value, displayFormat);
                                                                          <span style="white-space: pre-wrap">@displayValue</span>
                                                
                                                                      }
                                                                      else
                                                                      {
                                                                          @Html.Raw(value);
                                                                      }
                                                                  }
                                                                  else
                                                                  {
                                                                      <span class="text-muted">N/A</span> @* Giá trị mặc định *@
                                                                  }
                                                              }
                                                          </td>
                                                      }
                                                    }
                              
                                                  }
                                                }
                                              </tr>

                                              reportRowIndex ++;
                                            }
                                          }
                                      </tbody>
                                </table>
		                          </div>
                            </div>
                          </div>
                          @* end table *@
                        </div>
                    </div>
                    <!--/ Pagination Start -->
                    <div class="col-12 report-pagination d-flex justify-content-end mt-3">
                    </div>
                    <!--/ Pagination End -->
                </div>
            </div>
            @* end data table new *@
        </div>
        @* Modal (popup form) *@
        @*  *@
        <div class="modal fade" id="modal-PopupForm" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-xl modal-dialog-scrollable">
            </div>
        </div>
        @* End Modal  *@
    </div>
    <!-- Content wrapper -->
</div>
