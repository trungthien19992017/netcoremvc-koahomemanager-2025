@using KOAHome.Helpers
@using System.Text.Json
@{
    Layout = "~/Views/Shared/_ContentNavbarLayout.cshtml";
    var resultList = ViewData["resultList"] as List<dynamic>;

    // truyen cau hinh report de xu ly giao dien
    var report = ViewData["report"] as IDictionary<string, object>;
    string ReportCode = ViewData["ReportCode"] as string;

    // truyen danh sach gia tri loc len giao dien
    var listFilterValue = ViewData["ListFilterValue"] as IDictionary<string, object>;
    var listFilterConfig = ViewData["ListFilterConfig"] as List<dynamic>;

    // neu ton tai report thi xu ly tiep
    if (report != null)
    {
        // neu co default filter thi xử lý theo default filter
        if (listFilterConfig != null){
            // tra ve title cho page
            ViewData["Title"] = listFilterValue.ContainsKey("title") ? listFilterValue["title"] : report.ContainsKey("Name") ? report["Name"] : "Danh sách";
        }
        else{
            // nguoc lai thi theo report
            // // tra ve title cho page
            ViewData["Title"] = report.ContainsKey("Name") ? report["Name"] : "Danh sách";
        }
    }
    else{
        ViewData["Title"] = "Danh sách";
    }

    // danh sách select list chứa danh mục của các selectbox, radio, dropdownbox thuoc filter
    var dynamicServiceSelectOptions = ViewData["DynamicServiceSelectOptions"] as Dictionary<string, List<SelectListItem>>;
    // danh sách select list chứa danh mục của các selectbox, radio, dropdownbox thuoc display editor
    var editorDynamicServiceSelectOptions = ViewData["EditorDynamicServiceSelectOptions"] as Dictionary<string, List<SelectListItem>>;

    // truyen danh sach gia tri cot du lieu len giao dien
    var displayList = ViewData["displayList"] as List<dynamic>;
    // tính cấp cha con display (mac dinh chi lay 1)
    int displayParentLevelNum = ViewData.ContainsKey("displayParentLevelNum") ? Convert.ToInt32(ViewData["displayParentLevelNum"]) : 1;

    // tao bien dem de dem row num cho report
    var reportRowIndex = 1;



}

@section VendorStyles {
    <link rel="stylesheet" href="~/vendor/libs/apex-charts/apex-charts.css" />
}

@section VendorScripts {
    <script src="~/vendor/libs/apex-charts/apexcharts.js"></script>
}

@section PageScripts {
    <script src="~/js/dashboards-analytics.js"></script>
    @* thong bao day *@
    <script src="~/js/ui-toasts.js"></script>
    @* validate, kem cac file js ho tro *@
    <script src="~/js/helper.js"></script>
    <script src="~/js/flatpickr.js"></script>
    <script src="~/js/form-validation.js"></script>
    <script src="~/js/ui-popover.js"></script>

    <script>
        // tự động add param từ link vào hidden input
        window.addEventListener("DOMContentLoaded", () => {
        const urlParams = new URLSearchParams(window.location.search);
        const hiddenDiv = document.getElementById("hiddenInputs");

        urlParams.forEach((value, key) => {
        const input = document.createElement("input");
        input.type = "hidden";
        input.name = "q_"+key;
        input.value = value;
        hiddenDiv.appendChild(input);
        });
        });


        // them dong editor moi
    function addNewRow(tableid = "ReportEditor") {
        const table = document.getElementById(tableid).getElementsByTagName('tbody')[0];
        const templateRow = table.querySelector('tr[data-template="true"]');
        const newIndex = table.rows.length + 1;

        if (!templateRow) {
        console.error("Không tìm thấy dòng mẫu!");
        return;
        }

        // 1. Destroy select2 trên templateRow trước
        const $select = $(templateRow).find("select");

        if ($select.hasClass("select2-hidden-accessible")) {
        $select.select2('destroy');
        }

        // Optionally clear ID (nếu cần clone nhiều dòng tránh id trùng)
        $select.removeAttr("id");

        // Clone dòng mẫu
        const newRow = templateRow.cloneNode(true);
        newRow.removeAttribute("data-template");
        newRow.style.display = "";
        // Gán thuộc tính change tracking nếu cần
        newRow.setAttribute("data-changed", "true");
        newRow.setAttribute("data-template", "false");
        // xóa class ẩn tr
        newRow.classList.remove("d-none");

        // Replace tất cả {{index}} trong thuộc tính name
        newRow.innerHTML = newRow.innerHTML.replace(/grid\[\d+\]/g, `grid[${newIndex}]`);

        // Thêm vào đầu bảng hoặc cuối bảng
        const firstRow = table.querySelector('tr[data-template="false"]');
        if (firstRow) {
        table.insertBefore(newRow, firstRow);
        } else {
        table.appendChild(newRow);
        }

        // Áp dụng Select2 nếu có
        $(newRow).find("select").select2({
        placeholder: "Chọn",
        allowClear: true,
        width: "100%"
        });
        }


        // xu ly du lieu ngay trong report editor
        var gridData = @Html.Raw(Json.Serialize(ViewData["resultList"]));
        if (gridData != null)
        {
        $(document).ready(function () {
        $.each(gridData, function (index, rowData) {
        // Tìm tất cả input/select trong dòng có name động
        $(`#ReportEditor tbody tr:eq(${index})`).find("input, select, textarea").each(function () {
        let fieldName = $(this).attr("name"); // Lấy name của input
        if (!fieldName) return; // Nếu không có name, bỏ qua

        // Regex để lấy tên key từ `grid[index].FieldName`
        let match = fieldName.match(/\[(\d+)\]\.(\w+)/);
        if (!match) return; // Nếu không khớp format, bỏ qua

        let fieldKey = match[2]; // Lấy phần FieldName (ví dụ: "ServiceID", "Quantity",...)

        if (rowData.hasOwnProperty(fieldKey)) {
        let value = rowData[fieldKey];

        // Kiểm tra kiểu input và format lại nếu cần
        if ($(this).attr("type") === "datetime-local") {
        value = formatDateTimeLocal(value);
        // Gán giá trị vào input
        $(this).val(value);
        } else if ($(this).attr("type") === "date") {
        value = formatDate(value);
        // Gán giá trị vào input
        $(this).val(value);
        } else if ($(this).attr("type") === "time") {
        value = formatTime(value);
        // Gán giá trị vào input
        $(this).val(value);
        }
        // Nếu là select2, cần trigger để cập nhật giao diện
        if ($(this).is("select")) {
        $(this).trigger("change");
        }
        }
        });
        });
        });
        }
    </script>
}
@section success
{
    @if (ViewData["success"] != null)
    {

        <!-- Toast with Placements -->
        <div class="bs-toast toast  top-0 end-0 show toast-placement-ex1 m-2" style="position:absolute;" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="2000">
            <div class="toast-header">
                <i class="ri-home-4-fill me-2 text-success"></i>
                <div class="me-auto fw-medium">Thông báo</div><small class="text-muted">1 giây trước</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body text-success">@ViewData["success"].</div>
        </div>
        <!-- Toast with Placements -->
    }
}

@section ErrorMessage
{
    @if (ViewData["ErrorMessage"] != null)
    {
        <!-- Toast with Placements -->
        <div class="bs-toast toast  top-0 end-0 show toast-placement-ex1 m-2" style="position:absolute;" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="2000">
            <div class="toast-header">
                <i class="ri-home-4-fill me-2 text-danger"></i>
                <div class="me-auto fw-medium">Thông báo</div><small class="text-muted">1 giây trước</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body text-danger">@ViewData["ErrorMessage"].</div>
        </div>
        <!-- Toast with Placements -->
    }
}


@* ************** Content ************** *@
<!-- Content wrapper -->
<div class="content-wrapper">
    <!-- Content -->
    @if (report != null)
    {
    <div class="container-xxl flex-grow-1 container-p-y">
        <div class="row gy-6">
            @* Data Table new *@
            <!-- Data Tables -->
                <div class="col-xl-12">
                    <div class="card h-100 overflow-hidden">
                    <h2 class="card-header text-center" id="header-title">@(listFilterValue.ContainsKey("title") ? listFilterValue["title"] : report.ContainsKey("Name") ? report["Name"] : "Danh sách")</h2>
                      <div class="card-body" id="vertical-example">
                        <!-- Accordion -->
                        <!-- phan mo rong de an hien bo loc-->
                        <div class="row">
                            <div class="col-md mb-6 mb-md-2">
                                <div class="accordion mt-4" id="accordionExample">
                                    <div class="accordion-item active">
                                        <h2 class="accordion-header" id="headingOne">
                                            <button type="button" class="accordion-button collapsed" data-bs-toggle="collapse" data-bs-target="#accordionOne" aria-expanded="true" aria-controls="accordionOne">
                                                Tìm kiếm
                                            </button>
                                        </h2>
                                        <div id="accordionOne" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                                            <div class="accordion-body">
                                                @* filter *@
                                                <form method="get" class="needs-validation" novalidate="" action="/report/editor-utility/@ReportCode" enctype="multipart/form-data">
                                                    @* report code mac dinh truyen vao bo loc *@
                                                    <div class="row gx-3 gy-2 align-items-center">
                                                        @* xu ly filter dong *@
                                                        @if(listFilterConfig != null)
                                                        {
                                                            foreach (var filter in listFilterConfig.OrderBy(p => p.OrderId).ToList())
                                                            {
                                                                @* name: Key cua filter truyen vao, label: Ten filter, type: Loại filter, value: giá trị filter
                                                        , colspan: độ rộng filter *@
                                                                string name = filter.Code;
                                                                string label = filter.Name;
                                                                string type = filter.DynamicFieldName;
                                                                var value = listFilterValue.ContainsKey(name) ? listFilterValue[name] : "";
                                                                int colspan = Convert.ToInt32(filter.ColSpan);

                                                                @* neu colspan = 0 thi mac dinh = 4, neu khong thi lay colspan *@
                                                                <div class="col-md-@(Convert.ToInt32(filter.ColSpan) == 0 ? "4" : @filter.ColSpan) form-floating form-floating-outline mb-6">
                                                                    @if (type == "TEXT BOX")
                                                                    {
                                                                        <input class="form-control form-control-sm" type="text" id="@name" name="@name" value="@value" @(filter.Required == true ? "required" : "") />
                                                                    }
                                                                    else if (type == "DATE BOX")
                                                                    {
                                                                        <input class="form-control form-control-sm" type="date" id="@name" name="@name" value="@value" @(filter.Required == true ? "required" : "") />
                                                                    }
                                                                    else if (type == "SELECT BOX")
                                                                    {
                                                                        @* check selected cho item dung voi gia tri *@
                                                                        var selectList = dynamicServiceSelectOptions[name] as List<SelectListItem> ?? new List<SelectListItem>();
                                                                        @foreach (var item in selectList)
                                                                        {
                                                                            if (value != null)
                                                                            {
                                                                                item.Selected = (item.Value.ToString() == value.ToString()); // currentValue là giá trị đang được chọn
                                                                            }
                                                                        }
                                                                        var selectAttributes = new Dictionary<string, object>
                                                                              {
                                                                                { "class", "form-select color-dropdown form-select-sm" },
                                                                                { "id", name },
                                                                                { "name", name }
                                                                              };

                                                                        // neu bat buoc thi them truong bat buoc
                                                                        if (filter.Required == true)
                                                                        {
                                                                            selectAttributes["required"] = "required";
                                                                        }

                                                                        @Html.DropDownList(name, selectList, "-- Chọn --", selectAttributes)
                                                                    }
                                                                    else if (type == "TREEVIEW MULTIPLE")
                                                                    {
                                                                        @* check selected cho item dung voi gia tri *@
                                                                        var selectList = dynamicServiceSelectOptions[name] as List<SelectListItem> ?? new List<SelectListItem>();
                                                                        @foreach (var item in selectList)
                                                                        {
                                                                            if (value != null)
                                                                            {
                                                                                // split chuoi value thanh List string để xử lý
                                                                                var splitvalue = value.ToString().Split(",", StringSplitOptions.RemoveEmptyEntries);
                                                                                // kiểm tra cac giá trị có khớp không
                                                                                item.Selected = (splitvalue.Any(s => s.Trim().Equals(item.Value.ToString(), StringComparison.OrdinalIgnoreCase))); // currentValue là giá trị đang được chọn
                                                                            }
                                                                        }
                                                                        var selectAttributes = new Dictionary<string, object>
                                                                              {
                                                                                { "class", "form-select color-dropdown form-select-sm" },
                                                                                { "id", name },
                                                                                { "name", name },
                                                                                { "multiple", "multiple" }
                                                                              };

                                                                        // neu bat buoc thi them truong bat buoc
                                                                        if (filter.Required == true)
                                                                        {
                                                                            selectAttributes["required"] = "required";
                                                                        }

                                                                        @Html.DropDownList(name, selectList, "-- Chọn --", selectAttributes)
                                                                    }
                                                                    <label for="@name">@label</label>
                                                                    <div class="valid-feedback"> Chính xác! </div>
                                                                    <div class="invalid-feedback"> Không được bỏ trống. </div>
                                                                </div>
                                                            }
                                                        }

                                                    </div>
                                                    @* end filter *@
                                                    @* nut xem *@
                                                    <div class="row gx-3 gy-2 align-items-center">
                                                        <div class="col-md-12 d-flex justify-content-center">
                                                            <label class="form-label" for="showToastPlacement">&nbsp;</label>
                                                            <button type="submit" id="showToastPlacement" class="btn btn-primary d-block">Xem</button>
                                                        </div>
                                                    </div>
                                                    @* end nut xem *@
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--/ Accordion -->
                    @* end filter *@
                        @* table *@
                              @* form xu ly luu editor *@
                              <form id="editor-form" class="needs-validation" novalidate="" method="post" asp-controller="NETReport" asp-action="Editor_Utility" asp-route-reportCode="@ReportCode" enctype="multipart/form-data">
                                @* boc cac thanh phan cua table lai *@
                                <div id="@("table-editor-" + (ReportCode ?? "emptycode") + "-wrap")">
                                  @* action top *@
                                  <div class="gx-3 gy-2 align-items-center report-top-action">
                                  </div>
                                  @* end action top *@
                                  <div class="d-flex justify-content-between align-items-center">
                                      @* hien thi so dong duoc hien thi *@
                                      <div class="report-info d-flex gap-2"></div>
                                      @* button xu ly add row và submit *@
                                      <div class="d-flex gap-2">
                                          <button type="button" class="btn text-muted p-0" onclick="addNewRow('@("table-editor-" + ReportCode ?? "emptycode")')"><i class="ri-add-line ri-24px"></i></button>
                                          <button type="submit" class="btn text-muted p-0"><i class="ri-save-line ri-24px"></i></button>
                                      </div>
                                  </div>
                                  @* hidden input để xử lý ẩn truyền dữ liệu từ param link vào bằng js *@
                                  <div id="hiddenInputs"></div>
                                  <div class="table-responsive" style="max-height: 800px">
                                      <table id="@("table-editor-" + ReportCode ?? "emptycode")" data-table-displayname = "@(report.ContainsKey("Name") ? (report["Name"].ToString() ?? "Danh sách") : "Danh sách")" border="1" cellpadding="5" cellspacing="0" style="width: 100%; text-align: center; table-layout: auto;" class="table table-sm table-bordered table-hover display table-with-exportexcel">
                                          <thead class="freepanze-head">
                                              <tr>
                                                  @* Cột này sẽ tự động chứa checkbox "Chọn tất cả" *@
                                                  <th class="text-center" rowspan="@displayParentLevelNum" data-code="IdCheck" data-index="-1"  data-isexport="False" style="min-width:50px"></th>
                                                  @* neu display khong null thi tiep tuc *@
                                                  @if (displayList != null)
                                                  {
                                                      @* voi moi cot dang co *@
                                                      @* neu cot isdisplay = false thi không hien thi (chỉ lấy giá trị)  *@
                                                      @foreach (var display in displayList.Where(p => p.IsDisplay == false).OrderBy(p => p.ColNum ?? 0).ToList())
                                                      {
                                                          <th class="text-center d-none" rowspan="@displayParentLevelNum" data-code="@display.Code" data-index="@(display.ColNum ?? "0")" data-isexport="@(display.IsExport ?? "True")">@Html.Raw(display.Name)</th>
                                                      }
                                                      @* hien thi cot stt dau tien neu co *@
                                                      @foreach (var display in displayList.Where(p => p.IsDisplay == true && p.Code == "stt" && p.IsParent == false && string.IsNullOrEmpty(p.ParentCode)).OrderBy(p => p.ColNum ?? 0).ToList())
                                                      {
                                                          @* co dinh cot neu co cau hinh (chi ap dung cho cot 1 rowspan) *@
                                                          <th class="text-center @(display.IsFreePane == true ? "freepanze-col" : "")" rowspan="@displayParentLevelNum" data-code="@display.Code" data-index="@(display.ColNum ?? "0")" data-isexport="@(display.IsExport ?? "True")" style="min-width:@((display.Width ?? "200") + "px");@(display.CssHeader ?? "")">@Html.Raw(display.Name)</th>
                                                      }
                                                      @* neu cot khong co parent code cung khong phai is parent thi xu ly rieng *@
                                                      @foreach (var display in displayList.Where(p => p.IsDisplay == true && p.Code != "stt" && p.IsParent == false && string.IsNullOrEmpty(p.ParentCode)).OrderBy(p => p.ColNum ?? 0).ToList())
                                                      {
                                                          @* co dinh cot neu co cau hinh (chi ap dung cho cot 1 rowspan) *@
                                                          <th class="text-center @(display.IsFreePane == true ? "freepanze-col" : "")" rowspan="@displayParentLevelNum" data-code="@display.Code" data-index="@(display.ColNum ?? "0")" data-isexport="@(display.IsExport ?? "True")" style="min-width:@((display.Width ?? "200") + "px");@(display.CssHeader ?? "")">@Html.Raw(display.Name)</th>
                                                      }
                                                      @* neu ton tai cot co isparent thi xu ly tiep cot 2 cap *@
                                                      @if (displayList.Any(p => p.IsParent == true))
                                                      {
                                                          @* hien thi cot cha *@
                                                          @foreach (var display in displayList.Where(p => p.IsDisplay == true && p.IsParent == true).OrderBy(p => p.ColNum ?? 0).ToList())
                                                          {
                                                              @* dem so cot con de tinh colspan *@
                                                              var countChild = displayList.Count(p => p.ParentCode == display.Code);
                                                              @* neu co cot con thi xu ly tiep *@
                                                              if (countChild > 0)
                                                              {
                                                                  <th class="text-center" colspan="@countChild" data-code="@display.Code" data-isexport="@(display.IsExport ?? "True")" style="@(display.CssHeader ?? "")">@Html.Raw(display.Name)</th>
                                                              }

                                                          }
                                                      }
                                                      @* them nut xoa cuoi dòng *@
                                                      <th class="text-center" style="width:100px;">Hành động</th>

                                                  }
                                              </tr>
                                              @* neu co cap cha con thi tiep tuc *@
                                              @if (displayParentLevelNum > 1)
                                              {
                                                  <tr>
                                                      @* neu display khong null thi tiep tuc *@
                                                      @if (displayList != null)
                                                      {
                                                          @* voi moi cot dang co *@
                                                          @* neu ton tai cot co isparent thi xu ly tiep cot 2 cap *@
                                                          @if (displayList.Any(p => p.IsParent == true))
                                                          {
                                                              @* hien thi cot cha *@
                                                              @foreach (var display in displayList.Where(p => p.IsDisplay == true && p.IsParent == true).OrderBy(p => p.ColNum ?? 0).ToList())
                                                              {
                                                                  @* dem so cot con de tinh colspan *@
                                                                  var countChild = displayList.Count(p => p.ParentCode == display.Code);
                                                                  @* neu co cot con thi xu ly tiep *@
                                                                  @if (countChild > 0)
                                                                  {
                                                                      @foreach (var displaychild in displayList.Where(p => p.IsDisplay == true && p.ParentCode == display.Code).OrderBy(p => p.ColNum ?? 0).ToList())
                                                                      {
                                                                          <th class="text-center" data-code="@display.Code" data-index="@(displaychild.ColNum ?? "0")" data-isexport="@(displaychild.IsExport ?? "True")" style="min-width:@(displaychild.Width ?? "200")px;@(displaychild.CssHeader ?? "")">@Html.Raw(displaychild.Name)</th>
                                                                      }
                                                                  }

                                                              }
                                                          }
                                                      }
                                                  </tr>
                                              }
                                          </thead>
                                          <tbody class="overflow-auto">
                                              @if (resultList != null && displayList != null)
                                              {
                                                  // Thêm dòng template rỗng
                                                  var templateRow = new Dictionary<string, object>();

                                                  foreach (var display in displayList)
                                                  {
                                                      templateRow[display.Code] = null; // hoặc "" nếu cần
                                                  }

                                                  // Đánh dấu là dòng mẫu
                                                  templateRow["IsTemplateRow"] = true;

                                                  // Thêm lên đầu danh sách
                                                  resultList.Insert(0, templateRow);

                                                  @* voi moi dong resultlist *@
                                                  @foreach (var result in resultList
                                                  .OrderBy(p =>
                                                  {
                                                      try
                                                      {
                                                          object sttObj;
                                                          if (((IDictionary<string, object>)p).TryGetValue("stt", out sttObj) && sttObj != null)
                                                          {
                                                              return Convert.ToInt32(sttObj);
                                                          }
                                                      }
                                                      catch { }
                                                      return 0;
                                                  })
                                                  .ToList()
                                                  )
                                                  {
                                                      var dictionary = (IDictionary<string, object>)result;
                                                      var Id = dictionary.ContainsKey("Id") ? Convert.ToInt32(dictionary["Id"]) : 0;
                                                      @* lay gia tri to mau background row (BGColorRowClass) *@
                                                      var bgColorRowClass = dictionary.ContainsKey("BGColorRowClass") ? Convert.ToString(dictionary["BGColorRowClass"]) : "";
                                                      @* kiểm tra nếu là TemplateRow thì ẩn *@
                                                      var isTemplateRow = dictionary.ContainsKey("IsTemplateRow") && (bool)dictionary["IsTemplateRow"];

                                                      <tr class="@bgColorRowClass @(Convert.ToBoolean(isTemplateRow) ? "d-none" : "")" data-changed="false" data-template="@(Convert.ToBoolean(isTemplateRow) ? "true" : "false")">
                                                          @* cột select box mặc đinh *@
                                                          <td class="text-center" data-isexport="False" data-value="@Id">
                                                          </td>
                                                          @* voi moi cot dang co *@
                                                          @* neu cot isdisplay = false thi khong hien thi  *@
                                                          @foreach (var display in displayList.Where(p => p.IsDisplay == false).OrderBy(p => p.ColNum ?? 0).ToList())
                                                          {
                                                              <td class="@FormatHelper.ParseTextAlignToClass(display.TextAlign) d-none" data-isexport="@(display.IsExport ?? "True")">
                                                                  @{
                                                                      object value;
                                                                      if (dictionary.TryGetValue(display.Code, out value))
                                                                      {
                                                                          <input class="form-control text-center" type="text" name="@("grid["+@reportRowIndex+"]."+display.Code)" value="@value" readonly />
                                                                      }
                                                                      else
                                                                      {
                                                                          <span class="text-muted">N/A</span> @* Giá trị mặc định *@
                                                                      }
                                                                  }
                                                              </td>
                                                          }
                                                          @* hien thi cot stt dau tien neu co *@
                                                          @foreach (var display in displayList.Where(p => p.IsDisplay == true && p.Code == "stt" && p.IsParent == false && string.IsNullOrEmpty(p.ParentCode)).OrderBy(p => p.ColNum ?? 0).ToList())
                                                          {
                                                              @* neu isFreePane bang true thi them class freepanze-col *@
                                                              <td class="text-center @(display.IsFreePane == true ? "freepanze-col" : "")" data-isexport="@(display.IsExport ?? "True")">
                                                                  @{
                                                                      object value;
                                                                      if (dictionary.TryGetValue(display.Code, out value))
                                                                      {
                                                                          <input class="form-control text-center" type="text" name="@("grid["+@reportRowIndex+"]."+display.Code)" value="@value" readonly />
                                                                      }
                                                                      else
                                                                      {
                                                                          <span class="text-muted">N/A</span> @* Giá trị mặc định *@
                                                                      }
                                                                  }
                                                              </td>
                                                          }
                                                          @* neu cot khong co parent code cung khong phai is parent thi xu ly rieng *@
                                                          @foreach (var display in displayList.Where(p => p.IsDisplay == true && p.Code != "stt" && p.IsParent == false && string.IsNullOrEmpty(p.ParentCode)).OrderBy(p => p.ColNum ?? 0).ToList())
                                                          {
                                                              @* mặc định type là string *@
                                                              var displayType = display.Type as string ?? "string";
                                                              var displayFormat = display.Format as string ?? "";
                                                              string[] numberTypeArray = ["int", "float", "long"];
                                                              string[] dateTypeArray = ["date", "datetime"];
                                                              @* neu isFreePane bang true thi them class freepanze-col *@
                                                              <td class="@FormatHelper.ParseTextAlignToClass(display.TextAlign) @(display.IsFreePane == true ? "freepanze-col" : "")" data-isexport="@(display.IsExport ?? "True")" data-displaytype="@displayType" data-displayformat="@displayFormat">
                                                                  @{
                                                                      object value;
                                                                      if (dictionary.TryGetValue(display.Code, out value))
                                                                      {
                                                                          string valueType = "";
                                                                          // kiem tra kieu du lieu cua value
                                                                          if (@value != null)
                                                                          {
                                                                              valueType = value.GetType().ToString();
                                                                          }
                                                                          // uu tien kiem tra kieu du lieu cua value roi den display
                                                                          // neu kieu du lieu cua value la boolean thi su dung check box
                                                                          @if (valueType == "System.Boolean" || displayType == "boolean")
                                                                          {
                                                                              <input class="form-check-input track-change" type="checkbox" name="@("grid["+@reportRowIndex+"]."+display.Code)" value="true" @(Convert.ToBoolean(value ?? false) ? "checked" : "") @(display.ValidationRule != "[]" ? "required" : "") @(Convert.ToBoolean(display.IsReadOnly ?? false) ? "disabled" : "") />

                                                                          }
                                                                          else if (displayType == "icons")
                                                                          {
                                                                              var iconsJson = value?.ToString()?.Trim() ?? "";

                                                                              // Nếu rỗng thì bỏ qua
                                                                              if (!string.IsNullOrEmpty(iconsJson))
                                                                              {
                                                                                  // Đảm bảo chuỗi JSON luôn là mảng
                                                                                  if (iconsJson.TrimStart().StartsWith("{"))
                                                                                  {
                                                                                      iconsJson = "[" + iconsJson + "]";
                                                                                  }

                                                                                  try
                                                                                  {
                                                                                      var icons = JsonSerializer.Deserialize<List<JsonElement>>(iconsJson);

                                                                                      <ul class="list-unstyled m-0 avatar-group d-flex align-items-center">
                                                                                          @foreach (var icon in icons)
                                                                                          {
                                                                                              var title = icon.GetProperty("title").GetString();
                                                                                              var image = icon.GetProperty("image").GetString();
                                                                                              <li data-bs-toggle="tooltip"
                                                                                                  data-popup="tooltip-custom"
                                                                                                  data-bs-placement="top"
                                                                                                  class="avatar avatar-xs pull-up"
                                                                                                  aria-label="@title"
                                                                                                  data-bs-original-title="@title">
                                                                                                  <img src="@image" alt="Avatar" class="rounded-circle" />
                                                                                              </li>
                                                                                          }
                                                                                      </ul>
                                                                                  }
                                                                                  catch (Exception ex)
                                                                                  {
                                                                                      <span class="text-danger">N/A</span>
                                                                                  }
                                                                              }
                                                                          }
                                                                          // neu dang file thi hien thi icon tải nhiều file
                                                                          else if (displayType == "file")
                                                                          {
                                                                              var filesJson = value?.ToString()?.Trim() ?? "";

                                                                              // Nếu rỗng thì bỏ qua
                                                                              if (!string.IsNullOrEmpty(filesJson))
                                                                              {
                                                                                  // Nếu là object đơn, bao lại thành mảng
                                                                                  if (filesJson.StartsWith("{"))
                                                                                  {
                                                                                      filesJson = "[" + filesJson + "]";
                                                                                  }

                                                                                  try
                                                                                  {
                                                                                      var fileList = JsonSerializer.Deserialize<List<JsonElement>>(filesJson);

                                                                                      if (fileList?.Count > 0)
                                                                                      {
                                                                                          <div class="d-flex flex-wrap gap-1">
                                                                                              @foreach (var file in fileList)
                                                                                              {
                                                                                                  var fileName = file.GetProperty("fileName").GetString();
                                                                                                  var url = file.GetProperty("url").GetString();
                                                                                                  var displayName = fileName?.Length > 50 ? fileName.Substring(0, 50) + "..." : fileName;

                                                                                                  <a href="@url" download class="btn btn-sm btn-outline-primary file-download-link" title="@fileName">
                                                                                                      <i class="ri-download-2-fill"></i> @displayName
                                                                                                  </a>
                                                                                              }
                                                                                          </div>
                                                                                      }
                                                                                  }
                                                                                  catch
                                                                                  {
                                                                                      <span class="text-danger">Lỗi định dạng file JSON</span>
                                                                                  }
                                                                              }
                                                                          }
                                                                          // neu la kieu link thi parse thanh html
                                                                          else if (displayType == "link")
                                                                          {
                                                                              @Html.Raw(value)
                                                                              ;
                                                                          }
                                                                          // kiểu string
                                                                          else if (displayType == "string")
                                                                          {
                                                                              <input class="form-control track-change @FormatHelper.ParseTextAlignToClass(display.TextAlign)" type="text" name="@("grid["+@reportRowIndex+"]."+display.Code)" value="@value" @(Convert.ToBoolean(display.IsReadOnly ?? false) ? "readonly" : "") @(display.ValidationRule != "[]" ? "required" : "") />
                                                                          }
                                                                          // kiểu textarea
                                                                          else if (displayType == "textarea")
                                                                          {
                                                                              <textarea row="2" class="form-control track-change @FormatHelper.ParseTextAlignToClass(display.TextAlign)" name="@("grid["+@reportRowIndex+"]."+display.Code)" aria-label="@display.Name" @(Convert.ToBoolean(display.IsReadOnly ?? false) ? "readonly" : "") @(display.ValidationRule != "[]" ? "required" : "")>@value</textarea>
                                                                          }
                                                                          // neu la kieu number thi hien thi input number
                                                                          else if (numberTypeArray.Contains(displayType))
                                                                          {
                                                                              <input class="form-control track-change @FormatHelper.ParseTextAlignToClass(display.TextAlign)" type="number" placeholder="" name="@("grid["+@reportRowIndex+"]."+display.Code)" aria-label="@display.Name" value="@value" @(Convert.ToBoolean(display.IsReadOnly ?? false) ? "readonly" : "") @(display.ValidationRule != "[]" ? "required" : "")>
                                                                          }
                                                                          // kiểu ngày
                                                                          else if (dateTypeArray.Contains(displayType))
                                                                          {
                                                                              string[] dateFormatArray = ["dd/MM/yyyy", ""];
                                                                              string dateBoxType = "";
                                                                              if (displayType == "date" && dateFormatArray.Contains(displayFormat))
                                                                              {
                                                                                  dateBoxType = "date";
                                                                              }
                                                                              else
                                                                              {
                                                                                  dateBoxType = "datetime-local";
                                                                              }

                                                                              <input type="@dateBoxType" class="form-control track-change @FormatHelper.ParseTextAlignToClass(display.TextAlign)" name="@("grid["+@reportRowIndex+"]."+display.Code)" aria-label="@display.Name" value="@value" @(Convert.ToBoolean(display.IsReadOnly ?? false) ? "readonly" : "") @(display.ValidationRule != "[]" ? "required" : "")>
                                                                          }
                                                                          else if (displayType == "combobox")
                                                                          {
                                                                              // check selected cho item dung voi gia tri
                                                                              var selectList = editorDynamicServiceSelectOptions[display.Code] as List<SelectListItem> ?? new List<SelectListItem>();
                                                                              @foreach (var item in selectList)
                                                                              {
                                                                                  if (value != null)
                                                                                  {
                                                                                      item.Selected = (item.Value.ToString() == value.ToString()); // currentValue là giá trị đang được chọn
                                                                                  }
                                                                              }
                                                                              var selectAttributes = new Dictionary<string, object>
                                                  {
                                                  { "class", "form-select track-change" },
                                                  { "name", ("grid["+@reportRowIndex+"]."+display.Code) }
                                                  };

                                                                              // neu bat buoc thi them truong bat buoc
                                                                              if (display.ValidationRule != "[]")
                                                                              {
                                                                                  selectAttributes["required"] = "required";
                                                                              }

                                                                              @Html.DropDownList(("grid[" + @reportRowIndex + "]." + display.Code), selectList, "-- Chọn --", selectAttributes)
                                                                          }
                                                                          else if (displayType == "radio")
                                                                          {
                                                                              // check selected cho item dung voi gia tri
                                                                              var selectList = editorDynamicServiceSelectOptions[display.Code] as List<SelectListItem> ?? new List<SelectListItem>();

                                                                              @if (selectList != null)
                                                                              {
                                                                                  foreach (var item in selectList)
                                                                                  {
                                                                                      <div class="form-check form-check-inline track-change">
                                                                                          <input type="radio" class="form-check-input"
                                                                                                  name="@("grid["+@reportRowIndex+"]."+display.Code)"
                                                                                                  id="@(("grid["+@reportRowIndex+"]."+display.Code) + "_" + item.Value)"
                                                                                                  value="@item.Value"
                                                                                          @((value ?? "").ToString() == item.Value.ToString() ? "checked" : "") />
                                                                                          <label class="form-check-label" for="@(("grid["+@reportRowIndex+"]."+display.Code) + "_" + item.Value)">@item.Text</label>
                                                                                      </div>
                                                                                  }
                                                                              }
                                                                          }
                                                                          else
                                                                          {
                                                                              <input class="form-control track-change @FormatHelper.ParseTextAlignToClass(display.TextAlign)" type="text" name="@("grid["+@reportRowIndex+"]."+display.Code)" value="@value" @(Convert.ToBoolean(display.IsReadOnly ?? false) ? "readonly" : "") @(display.ValidationRule != "[]" ? "required" : "") />

                                                                          }                                              }
                                                                      else
                                                                      {
                                                                          <span class="text-muted">N/A</span> @* Giá trị mặc định *@
                                                                      }
                                                                  }
                                                              </td>
                                                          }
                                                          @* neu ton tai cot co isparent thi xu ly tiep cot 2 cap *@
                                                          @if (displayList.Any(p => p.IsParent == true))
                                                          {
                                                              @* hien thi cot cha *@
                                                              @foreach (var display in displayList.Where(p => p.IsDisplay == true && p.IsParent == true).OrderBy(p => p.ColNum ?? 0).ToList())
                                                              {
                                                                  @* dem so cot con de tinh colspan *@
                                                                  var countChild = displayList.Count(p => p.ParentCode == display.Code);
                                                                  @* neu co cot con thi xu ly tiep *@
                                                                  if (countChild > 0)
                                                                  {
                                                                      @foreach (var displaychild in displayList.Where(p => p.IsDisplay == true && p.ParentCode == display.Code).OrderBy(p => p.ColNum ?? 0).ToList())
                                                                      {
                                                                          @* mặc định type là string *@
                                                                          var displayType = displaychild.Type as string ?? "string";
                                                                          var displayFormat = displaychild.Format as string ?? "";
                                                                          string[] numberTypeArray = ["int", "float", "long"];
                                                                          string[] dateTypeArray = ["date", "datetime"];
                                                                          <td class="@FormatHelper.ParseTextAlignToClass(displaychild.TextAlign)" data-isexport="@(displaychild.IsExport ?? "0")" data-displaytype="@displayType" data-displayformat="@displayFormat">
                                                                              @{
                                                                                  object value;
                                                                                  if (dictionary.TryGetValue(displaychild.Code, out value))
                                                                                  {
                                                                                      string valueType = "";
                                                                                      // kiem tra kieu du lieu cua value
                                                                                      if (@value != null)
                                                                                      {
                                                                                          valueType = value.GetType().ToString();
                                                                                      }

                                                                                      // uu tien kiem tra kieu du lieu cua value roi den display
                                                                                      // neu kieu du lieu cua value la boolean thi su dung check box
                                                                                      @if (valueType == "System.Boolean" || displayType == "boolean")
                                                                                      {
                                                                                          <input class="form-check-input track-change" type="checkbox" name="@("grid["+@reportRowIndex+"]."+displaychild.Code)" value="true" @(Convert.ToBoolean(value ?? false) ? "checked" : "") @(displaychild.ValidationRule != "[]" ? "required" : "") @(Convert.ToBoolean(displaychild.IsReadOnly ?? false) ? "disabled" : "") />

                                                                                      }
                                                                                      else if (displayType == "icons")
                                                                                      {
                                                                                          var iconsJson = value?.ToString()?.Trim() ?? "";

                                                                                          // Nếu rỗng thì bỏ qua
                                                                                          if (!string.IsNullOrEmpty(iconsJson))
                                                                                          {
                                                                                              // Đảm bảo chuỗi JSON luôn là mảng
                                                                                              if (iconsJson.TrimStart().StartsWith("{"))
                                                                                              {
                                                                                                  iconsJson = "[" + iconsJson + "]";
                                                                                              }

                                                                                              try
                                                                                              {
                                                                                                  var icons = JsonSerializer.Deserialize<List<JsonElement>>(iconsJson);

                                                                                                  <ul class="list-unstyled m-0 avatar-group d-flex align-items-center">
                                                                                                      @foreach (var icon in icons)
                                                                                                      {
                                                                                                          var title = icon.GetProperty("title").GetString();
                                                                                                          var image = icon.GetProperty("image").GetString();
                                                                                                          <li data-bs-toggle="tooltip"
                                                                                                              data-popup="tooltip-custom"
                                                                                                              data-bs-placement="top"
                                                                                                              class="avatar avatar-xs pull-up"
                                                                                                              aria-label="@title"
                                                                                                              data-bs-original-title="@title">
                                                                                                              <img src="@image" alt="Avatar" class="rounded-circle" />
                                                                                                          </li>
                                                                                                      }
                                                                                                  </ul>
                                                                                              }
                                                                                              catch (Exception ex)
                                                                                              {
                                                                                                  <span class="text-danger">N/A</span>
                                                                                              }
                                                                                          }
                                                                                      }
                                                                                      // neu dang file thi hien thi icon tải nhiều file
                                                                                      else if (displayType == "file")
                                                                                      {
                                                                                          var filesJson = value?.ToString()?.Trim() ?? "";

                                                                                          // Nếu rỗng thì bỏ qua
                                                                                          if (!string.IsNullOrEmpty(filesJson))
                                                                                          {
                                                                                              // Nếu là object đơn, bao lại thành mảng
                                                                                              if (filesJson.StartsWith("{"))
                                                                                              {
                                                                                                  filesJson = "[" + filesJson + "]";
                                                                                              }

                                                                                              try
                                                                                              {
                                                                                                  var fileList = JsonSerializer.Deserialize<List<JsonElement>>(filesJson);

                                                                                                  if (fileList?.Count > 0)
                                                                                                  {
                                                                                                      <div class="d-flex flex-wrap gap-1">
                                                                                                          @foreach (var file in fileList)
                                                                                                          {
                                                                                                              var fileName = file.GetProperty("fileName").GetString();
                                                                                                              var url = file.GetProperty("url").GetString();
                                                                                                              var displayName = fileName?.Length > 50 ? fileName.Substring(0, 50) + "..." : fileName;

                                                                                                              <a href="@url" download class="btn btn-sm btn-outline-primary file-download-link" title="@fileName">
                                                                                                                  <i class="ri-download-2-fill"></i> @displayName
                                                                                                              </a>
                                                                                                          }
                                                                                                      </div>
                                                                                                  }
                                                                                              }
                                                                                              catch
                                                                                              {
                                                                                                  <span class="text-danger">Lỗi định dạng file JSON</span>
                                                                                              }
                                                                                          }
                                                                                      }
                                                                                      // neu la kieu link thi parse thanh html
                                                                                      else if (displayType == "link")
                                                                                      {
                                                                                          @Html.Raw(value)
                                                                                          ;
                                                                                      }
                                                                                      // kiểu string
                                                                                      else if (displayType == "string")
                                                                                      {
                                                                                          <input class="form-control track-change @FormatHelper.ParseTextAlignToClass(displaychild.TextAlign)" type="text" name="@("grid["+@reportRowIndex+"]."+displaychild.Code)" value="@value" @(Convert.ToBoolean(displaychild.IsReadOnly ?? false) ? "readonly" : "") @(displaychild.ValidationRule != "[]" ? "required" : "") />
                                                                                      }
                                                                                      // kiểu textarea
                                                                                      else if (displayType == "textarea")
                                                                                      {
                                                                                          <textarea row="2" class="form-control track-change @FormatHelper.ParseTextAlignToClass(displaychild.TextAlign)" name="@("grid["+@reportRowIndex+"]."+displaychild.Code)" aria-label="@displaychild.Name" @(Convert.ToBoolean(displaychild.IsReadOnly ?? false) ? "readonly" : "") @(displaychild.ValidationRule != "[]" ? "required" : "")>@value</textarea>
                                                                                      }
                                                                                      // neu la kieu number thi hien thi input number
                                                                                      else if (numberTypeArray.Contains(displayType))
                                                                                      {
                                                                                          <input class="form-control track-change @FormatHelper.ParseTextAlignToClass(displaychild.TextAlign)" type="number" placeholder="" name="@("grid["+@reportRowIndex+"]."+displaychild.Code)" aria-label="@displaychild.Name" value="@value" @(Convert.ToBoolean(displaychild.IsReadOnly ?? false) ? "readonly" : "") @(displaychild.ValidationRule != "[]" ? "required" : "")>
                                                                                      }
                                                                                      // kiểu ngày
                                                                                      else if (dateTypeArray.Contains(displayType))
                                                                                      {
                                                                                          string[] dateFormatArray = ["dd/MM/yyyy", ""];
                                                                                          string dateBoxType = "";
                                                                                          if (displayType == "date" && dateFormatArray.Contains(displayFormat))
                                                                                          {
                                                                                              dateBoxType = "date";
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                              dateBoxType = "datetime-local";
                                                                                          }

                                                                                          <input type="@dateBoxType" class="form-control track-change @FormatHelper.ParseTextAlignToClass(displaychild.TextAlign)" name="@("grid["+@reportRowIndex+"]."+displaychild.Code)" aria-label="@displaychild.Name" value="@value" @(Convert.ToBoolean(displaychild.IsReadOnly ?? false) ? "readonly" : "") @(displaychild.ValidationRule != "[]" ? "required" : "")>
                                                                                      }
                                                                                      else if (displayType == "combobox")
                                                                                      {
                                                                                          // check selected cho item dung voi gia tri
                                                                                          var selectList = editorDynamicServiceSelectOptions[displaychild.Code] as List<SelectListItem> ?? new List<SelectListItem>();
                                                                                          @foreach (var item in selectList)
                                                                                          {
                                                                                              if (value != null)
                                                                                              {
                                                                                                  item.Selected = (item.Value.ToString() == value.ToString()); // currentValue là giá trị đang được chọn
                                                                                              }
                                                                                          }
                                                                                          var selectAttributes = new Dictionary<string, object>
                                                  {
                                                  { "class", "form-select track-change" },
                                                  { "name", ("grid["+@reportRowIndex+"]."+displaychild.Code) }
                                                  };

                                                                                          // neu bat buoc thi them truong bat buoc
                                                                                          if (displaychild.ValidationRule != "[]")
                                                                                          {
                                                                                              selectAttributes["required"] = "required";
                                                                                          }

                                                                                          @Html.DropDownList(("grid[" + @reportRowIndex + "]." + display.Code), selectList, "-- Chọn --", selectAttributes)
                                                                                      }
                                                                                      else if (displayType == "radio")
                                                                                      {
                                                                                          // check selected cho item dung voi gia tri
                                                                                          var selectList = editorDynamicServiceSelectOptions[displaychild.Code] as List<SelectListItem> ?? new List<SelectListItem>();

                                                                                          @if (selectList != null)
                                                                                          {
                                                                                              foreach (var item in selectList)
                                                                                              {
                                                                                                  <div class="form-check form-check-inline track-change">
                                                                                                      <input type="radio" class="form-check-input"
                                                                                                              name="@("grid["+@reportRowIndex+"]."+displaychild.Code)"
                                                                                                              id="@(("grid["+@reportRowIndex+"]."+displaychild.Code) + "_" + item.Value)"
                                                                                                              value="@item.Value"
                                                                                                      @((value ?? "").ToString() == item.Value.ToString() ? "checked" : "") />
                                                                                                      <label class="form-check-label" for="@(("grid["+@reportRowIndex+"]."+displaychild.Code) + "_" + item.Value)">@item.Text</label>
                                                                                                  </div>
                                                                                              }
                                                                                          }
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                          <input class="form-control track-change @FormatHelper.ParseTextAlignToClass(displaychild.TextAlign)" type="text" name="@("grid["+@reportRowIndex+"]."+displaychild.Code)" value="@value" @(Convert.ToBoolean(displaychild.IsReadOnly ?? false) ? "readonly" : "") @(displaychild.ValidationRule != "[]" ? "required" : "") />
                                                                                      }                                              }
                                                                                  else
                                                                                  {
                                                                                      <span class="text-muted">N/A</span> @* Giá trị mặc định *@
                                                                                  }
                                                                              }
                                                                              else
                                                                              {
                                                                              <span class="text-muted">N/A</span> @* Giá trị mặc định *@
                                                                              }
                                                                              }
                                                                          </td>
                                                                      }
                                                                  }

                                                              }
                                                          }
                                                          @* them nut xoa cuoi dong *@
                                                          <td class="text-center">
                                                              <input type="hidden" name="grid[@reportRowIndex].isDeleted" value="false" class="isDeleted track-change">
                                                              <button type="button" class="btn-delete btn btn-sm text-danger" onclick="toggleDelete(this)">
                                                                  <i class="ri-delete-bin-line ri-24px"></i>
                                                              </button>
                                                          </td>
                                                      </tr>

                                                      reportRowIndex++;
                                                  }
                                              }
                                          </tbody>
                                      </table>
                                  </div>
                                <!--/ Pagination Start -->
                                <div class="col-12 report-pagination d-flex justify-content-end mt-3">
                                </div>
                                <!--/ Pagination End -->
                              </div>
                            </form>
                          </div>
                        @* end table *@
                    </div>
                </div>           
            @* end data table new *@
        </div>
        @* Modal (popup form) *@
        @* Huy phong *@
        <div class="row gy-6">
            @{
                await Html.RenderPartialAsync("_HuyPhong");
            }
        </div>
        @* End Huy phong *@
        @* giam gia phat sinh *@
        <div class="row gy-6">
            @{
                await Html.RenderPartialAsync("_GiamGiaPhatSinh");
            }
        </div>
        @* end giam gia phat sinh *@
        @* End Modal  *@
    </div> 
    }
    <!-- Content wrapper -->
</div>
