// <auto-generated />
using System;
using KOAHome.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KOAHome.Migrations
{
    [DbContext(typeof(QLKCL_NEWContext))]
    partial class QLKCL_NEWContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "dblink");
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgres_fdw");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KOAHome.EntityFramework.Abprole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Concurrencystamp")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("concurrencystamp");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<long?>("Creatoruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Defaultmenuid")
                        .HasColumnType("integer")
                        .HasColumnName("defaultmenuid");

                    b.Property<long?>("Deleteruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("deleteruserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<string>("Displayname")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("displayname");

                    b.Property<bool?>("Isdefault")
                        .HasColumnType("boolean")
                        .HasColumnName("isdefault");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<bool?>("Isstatic")
                        .HasColumnType("boolean")
                        .HasColumnName("isstatic");

                    b.Property<string>("Labelid")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("labelid");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<long?>("Lastmodifieruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<string>("Loai")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("loai");

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("name");

                    b.Property<string>("Normalizedname")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("normalizedname");

                    b.Property<int?>("Orderid")
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    b.Property<string>("Pageredirect")
                        .HasColumnType("text")
                        .HasColumnName("pageredirect");

                    b.Property<int?>("Parentid")
                        .HasColumnType("integer")
                        .HasColumnName("parentid");

                    b.Property<int?>("Roletype")
                        .HasColumnType("integer")
                        .HasColumnName("roletype");

                    b.Property<string>("Sitecode")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("sitecode");

                    b.Property<string>("Siteid")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("siteid");

                    b.Property<int?>("Tenantid")
                        .HasColumnType("integer")
                        .HasColumnName("tenantid");

                    b.Property<int?>("Unitid")
                        .HasColumnType("integer")
                        .HasColumnName("unitid");

                    b.HasKey("Id")
                        .HasName("pk_abproles");

                    b.ToTable("abproles", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.Abpuser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Accessfailedcount")
                        .HasColumnType("integer")
                        .HasColumnName("accessfailedcount");

                    b.Property<string>("Apikey")
                        .HasColumnType("text")
                        .HasColumnName("apikey");

                    b.Property<string>("Authenticationsource")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("authenticationsource");

                    b.Property<string>("Concurrencystamp")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("concurrencystamp");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<long?>("Creatoruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("creatoruserid");

                    b.Property<long?>("Deleteruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("deleteruserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<string>("Emailaddress")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("emailaddress");

                    b.Property<string>("Emailconfirmationcode")
                        .HasMaxLength(328)
                        .HasColumnType("character varying(328)")
                        .HasColumnName("emailconfirmationcode");

                    b.Property<string>("Googleauthenticatorkey")
                        .HasColumnType("text")
                        .HasColumnName("googleauthenticatorkey");

                    b.Property<bool?>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<bool?>("Isemailconfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("isemailconfirmed");

                    b.Property<bool?>("Islockoutenabled")
                        .HasColumnType("boolean")
                        .HasColumnName("islockoutenabled");

                    b.Property<bool?>("Isphonenumberconfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("isphonenumberconfirmed");

                    b.Property<int?>("Issynckcl")
                        .HasColumnType("integer")
                        .HasColumnName("issynckcl");

                    b.Property<bool?>("Istwofactorenabled")
                        .HasColumnType("boolean")
                        .HasColumnName("istwofactorenabled");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<long?>("Lastmodifieruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<DateTime?>("Lockoutenddateutc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lockoutenddateutc");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Normalizedemailaddress")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("normalizedemailaddress");

                    b.Property<string>("Normalizedusername")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("normalizedusername");

                    b.Property<int?>("Orderid")
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    b.Property<string>("Password")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("password");

                    b.Property<string>("Passwordresetcode")
                        .HasMaxLength(328)
                        .HasColumnType("character varying(328)")
                        .HasColumnName("passwordresetcode");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("phonenumber");

                    b.Property<int?>("Phongbanid")
                        .HasColumnType("integer")
                        .HasColumnName("phongbanid");

                    b.Property<string>("Position")
                        .HasColumnType("text")
                        .HasColumnName("position");

                    b.Property<Guid?>("Profilepictureid")
                        .HasColumnType("uuid")
                        .HasColumnName("profilepictureid");

                    b.Property<string>("Securitystamp")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("securitystamp");

                    b.Property<bool?>("Shouldchangepasswordonnextlogin")
                        .HasColumnType("boolean")
                        .HasColumnName("shouldchangepasswordonnextlogin");

                    b.Property<string>("Signatureimg")
                        .HasColumnType("text")
                        .HasColumnName("signatureimg");

                    b.Property<string>("Signintoken")
                        .HasColumnType("text")
                        .HasColumnName("signintoken");

                    b.Property<DateTime?>("Signintokenexpiretimeutc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("signintokenexpiretimeutc");

                    b.Property<string>("Surname")
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.Property<int?>("Tenantid")
                        .HasColumnType("integer")
                        .HasColumnName("tenantid");

                    b.Property<int?>("Unitid")
                        .HasColumnType("integer")
                        .HasColumnName("unitid");

                    b.Property<string>("UseridQlvb")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("userid_qlvb");

                    b.Property<string>("Useridcchc")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("useridcchc");

                    b.Property<Guid?>("Useridkcl")
                        .HasColumnType("uuid")
                        .HasColumnName("useridkcl");

                    b.Property<string>("Username")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("username");

                    b.Property<string>("Useruid")
                        .HasColumnType("text")
                        .HasColumnName("useruid");

                    b.HasKey("Id")
                        .HasName("pk_abpusers");

                    b.ToTable("abpusers", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.Abpuserrole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<long?>("Creatoruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Roleid")
                        .HasColumnType("integer")
                        .HasColumnName("roleid");

                    b.Property<int?>("Rolelevel")
                        .HasColumnType("integer")
                        .HasColumnName("rolelevel");

                    b.Property<int?>("Tenantid")
                        .HasColumnType("integer")
                        .HasColumnName("tenantid");

                    b.Property<long?>("Userid")
                        .HasColumnType("bigint")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("pk_abpuserroles");

                    b.ToTable("abpuserroles", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long?>("Authorid")
                        .HasColumnType("bigint")
                        .HasColumnName("authorid");

                    b.Property<string>("Contenttype")
                        .HasColumnType("text")
                        .HasColumnName("contenttype");

                    b.Property<string>("Convertdiskdirectory")
                        .HasColumnType("text")
                        .HasColumnName("convertdiskdirectory");

                    b.Property<string>("Convertfilename")
                        .HasColumnType("text")
                        .HasColumnName("convertfilename");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<long?>("Creatoruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("creatoruserid");

                    b.Property<long?>("Deleteruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("deleteruserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<string>("Diskdirectory")
                        .HasColumnType("text")
                        .HasColumnName("diskdirectory");

                    b.Property<string>("Diskfilename")
                        .HasColumnType("text")
                        .HasColumnName("diskfilename");

                    b.Property<string>("Filename")
                        .HasColumnType("text")
                        .HasColumnName("filename");

                    b.Property<int?>("Filesize")
                        .HasColumnType("integer")
                        .HasColumnName("filesize");

                    b.Property<bool?>("Iscurrent")
                        .HasColumnType("boolean")
                        .HasColumnName("iscurrent");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<long?>("Lastmodifieruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<long?>("Objectid")
                        .HasColumnType("bigint")
                        .HasColumnName("objectid");

                    b.Property<long?>("Objecttypeid")
                        .HasColumnType("bigint")
                        .HasColumnName("objecttypeid");

                    b.Property<int?>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<int?>("Tenantid")
                        .HasColumnType("integer")
                        .HasColumnName("tenantid");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.HasKey("Id")
                        .HasName("pk_attachment");

                    b.HasIndex(new[] { "Objecttypeid", "Objectid", "Isdeleted" }, "idx_ix_attachment_objecttypeid_objectid_isdeleted");

                    b.ToTable("attachment", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.Attachmentsyntax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<long?>("Creatoruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("creatoruserid");

                    b.Property<long?>("Deleteruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("deleteruserid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<bool?>("Ischangesyntaxname")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("ischangesyntaxname");

                    b.Property<bool?>("Isdefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isdefault");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<long?>("Lastmodifieruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("Orderid")
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    b.Property<string>("Syntaxname")
                        .HasColumnType("text")
                        .HasColumnName("syntaxname");

                    b.Property<string>("Syntaxpath")
                        .HasColumnType("text")
                        .HasColumnName("syntaxpath");

                    b.Property<int?>("Tenantid")
                        .HasColumnType("integer")
                        .HasColumnName("tenantid");

                    b.HasKey("Id")
                        .HasName("pk_attachmentsyntax");

                    b.ToTable("attachmentsyntax", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<string>("Name")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("name");

                    b.Property<int?>("Orderid")
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    b.Property<string>("Sitecode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("sitecode");

                    b.Property<int?>("Siteid")
                        .HasColumnType("integer")
                        .HasColumnName("siteid");

                    b.Property<string>("Typecode")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("typecode");

                    b.Property<int?>("Typeid")
                        .HasColumnType("integer")
                        .HasColumnName("typeid");

                    b.HasKey("Id")
                        .HasName("pk_category");

                    b.ToTable("category", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.Categorydetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Categorycode")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("categorycode");

                    b.Property<int?>("Categoryid")
                        .HasColumnType("integer")
                        .HasColumnName("categoryid");

                    b.Property<string>("Code")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<string>("Name")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("name");

                    b.Property<int?>("Orderid")
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    b.Property<string>("Sitecode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("sitecode");

                    b.Property<int?>("Siteid")
                        .HasColumnType("integer")
                        .HasColumnName("siteid");

                    b.HasKey("Id")
                        .HasName("pk_categorydetail");

                    b.ToTable("categorydetail", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.City", b =>
                {
                    b.Property<int>("Cityid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cityid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Cityid"));

                    b.Property<string>("Citycode")
                        .HasColumnType("text")
                        .HasColumnName("citycode");

                    b.Property<string>("Cityname")
                        .HasColumnType("text")
                        .HasColumnName("cityname");

                    b.Property<string>("Indexid")
                        .HasColumnType("text")
                        .HasColumnName("indexid");

                    b.Property<bool?>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdelete")
                        .HasColumnType("boolean")
                        .HasColumnName("isdelete");

                    b.HasKey("Cityid")
                        .HasName("pk_cities");

                    b.ToTable("cities", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.CtkmT10d", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<int?>("Diemden")
                        .HasColumnType("integer")
                        .HasColumnName("diemden");

                    b.Property<int?>("Diemtu")
                        .HasColumnType("integer")
                        .HasColumnName("diemtu");

                    b.Property<bool?>("Havevoucher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("havevoucher");

                    b.Property<bool?>("Isactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk__ctkm_t10d__a4ae64b8304c97e3");

                    b.ToTable("ctkm_t10d", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.CtkmT10dDe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Customerid")
                        .HasColumnType("integer")
                        .HasColumnName("customerid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<bool?>("Isactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isdeleted");

                    b.Property<string>("Kmcode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("kmcode");

                    b.Property<int?>("Kmid")
                        .HasColumnType("integer")
                        .HasColumnName("kmid");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<int?>("Time")
                        .HasColumnType("integer")
                        .HasColumnName("time");

                    b.HasKey("Id")
                        .HasName("pk__ctkm_t10d_de__a4ae64b8304c97e3");

                    b.ToTable("ctkm_t10d_de", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.District", b =>
                {
                    b.Property<int>("Districtid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("districtid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Districtid"));

                    b.Property<long?>("Cityid")
                        .HasColumnType("bigint")
                        .HasColumnName("cityid");

                    b.Property<int?>("Danso")
                        .HasColumnType("integer")
                        .HasColumnName("danso");

                    b.Property<string>("Districtcode")
                        .HasColumnType("text")
                        .HasColumnName("districtcode");

                    b.Property<string>("Districtname")
                        .HasColumnType("text")
                        .HasColumnName("districtname");

                    b.Property<bool?>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdelete")
                        .HasColumnType("boolean")
                        .HasColumnName("isdelete");

                    b.Property<int?>("Orderid")
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    b.HasKey("Districtid")
                        .HasName("pk_districts");

                    b.ToTable("districts", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.Drdisplay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Allowmergecells")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("allowmergecells");

                    b.Property<string>("Area")
                        .HasColumnType("text")
                        .HasColumnName("area");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<int?>("Colnum")
                        .HasColumnType("integer")
                        .HasColumnName("colnum");

                    b.Property<string>("Columnsetdata")
                        .HasColumnType("text")
                        .HasColumnName("columnsetdata");

                    b.Property<string>("Configheader")
                        .HasColumnType("text")
                        .HasColumnName("configheader");

                    b.Property<string>("Configpopup")
                        .HasColumnType("text")
                        .HasColumnName("configpopup");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<long?>("Creatoruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("creatoruserid");

                    b.Property<string>("Cssheader")
                        .HasColumnType("text")
                        .HasColumnName("cssheader");

                    b.Property<string>("Customsummary")
                        .HasColumnType("text")
                        .HasColumnName("customsummary");

                    b.Property<long?>("Deleteruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("deleteruserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<string>("Editcelltemplate")
                        .HasColumnType("text")
                        .HasColumnName("editcelltemplate");

                    b.Property<string>("Editcolumns")
                        .HasColumnType("text")
                        .HasColumnName("editcolumns");

                    b.Property<string>("Format")
                        .HasColumnType("text")
                        .HasColumnName("format");

                    b.Property<string>("Formulasyntax")
                        .HasColumnType("text")
                        .HasColumnName("formulasyntax");

                    b.Property<string>("Freepaneposition")
                        .HasColumnType("text")
                        .HasColumnName("freepaneposition");

                    b.Property<int?>("Grouplevel")
                        .HasColumnType("integer")
                        .HasColumnName("grouplevel");

                    b.Property<string>("Groupsort")
                        .HasColumnType("text")
                        .HasColumnName("groupsort");

                    b.Property<bool?>("Isavg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isavg");

                    b.Property<bool?>("Iscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("iscount");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<bool?>("Isdisplay")
                        .HasColumnType("boolean")
                        .HasColumnName("isdisplay");

                    b.Property<bool?>("Isexpand")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isexpand");

                    b.Property<bool?>("Isexport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isexport");

                    b.Property<bool?>("Isfreepane")
                        .HasColumnType("boolean")
                        .HasColumnName("isfreepane");

                    b.Property<bool?>("Ismax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("ismax");

                    b.Property<bool?>("Ismin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("ismin");

                    b.Property<bool?>("Isparent")
                        .HasColumnType("boolean")
                        .HasColumnName("isparent");

                    b.Property<bool?>("Isreadonly")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isreadonly");

                    b.Property<bool?>("Issort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("issort");

                    b.Property<bool?>("Issum")
                        .HasColumnType("boolean")
                        .HasColumnName("issum");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<long?>("Lastmodifieruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<string>("Parentcode")
                        .HasColumnType("text")
                        .HasColumnName("parentcode");

                    b.Property<string>("Pivotfield")
                        .HasColumnType("text")
                        .HasColumnName("pivotfield");

                    b.Property<string>("Pivotorders")
                        .HasColumnType("text")
                        .HasColumnName("pivotorders");

                    b.Property<string>("Reportcode")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("reportcode");

                    b.Property<long?>("Reportid")
                        .HasColumnType("bigint")
                        .HasColumnName("reportid");

                    b.Property<int?>("Serviceid")
                        .HasColumnType("integer")
                        .HasColumnName("serviceid");

                    b.Property<bool?>("Showingroupfooter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("showingroupfooter");

                    b.Property<string>("Sortbycolumn")
                        .HasColumnType("text")
                        .HasColumnName("sortbycolumn");

                    b.Property<string>("Summarydisplaymode")
                        .HasColumnType("text")
                        .HasColumnName("summarydisplaymode");

                    b.Property<string>("Textalign")
                        .HasColumnType("text")
                        .HasColumnName("textalign");

                    b.Property<string>("Textissum")
                        .HasColumnType("text")
                        .HasColumnName("textissum");

                    b.Property<string>("Type")
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.Property<string>("Validationrule")
                        .HasColumnType("text")
                        .HasColumnName("validationrule");

                    b.Property<bool?>("Visible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("visible");

                    b.Property<string>("Width")
                        .HasColumnType("text")
                        .HasColumnName("width");

                    b.HasKey("Id")
                        .HasName("pk_drdisplay");

                    b.ToTable("drdisplay", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.Efmigrationshistory", b =>
                {
                    b.Property<string>("Migrationid")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("migrationid");

                    b.Property<string>("Productversion")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("productversion");

                    b.HasKey("Migrationid")
                        .HasName("pk___efmigrationshistory");

                    b.ToTable("__efmigrationshistory", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<bool?>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk__genders__3214ec07bb181d81");

                    b.ToTable("genders", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.Getattachment", b =>
                {
                    b.Property<long?>("Authorid")
                        .HasColumnType("bigint")
                        .HasColumnName("authorid");

                    b.Property<string>("Contenttype")
                        .HasColumnType("text")
                        .HasColumnName("contenttype");

                    b.Property<string>("Convertdiskdirectory")
                        .HasColumnType("text")
                        .HasColumnName("convertdiskdirectory");

                    b.Property<string>("Convertfilename")
                        .HasColumnType("text")
                        .HasColumnName("convertfilename");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<long?>("Creatoruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("creatoruserid");

                    b.Property<long?>("Deleteruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("deleteruserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<string>("Diskdirectory")
                        .HasColumnType("text")
                        .HasColumnName("diskdirectory");

                    b.Property<string>("Diskfilename")
                        .HasColumnType("text")
                        .HasColumnName("diskfilename");

                    b.Property<string>("Filename")
                        .HasColumnType("text")
                        .HasColumnName("filename");

                    b.Property<int?>("Filesize")
                        .HasColumnType("integer")
                        .HasColumnName("filesize");

                    b.Property<int?>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<bool?>("Iscurrent")
                        .HasColumnType("boolean")
                        .HasColumnName("iscurrent");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<long?>("Lastmodifieruserid")
                        .HasColumnType("bigint")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<long?>("Objectid")
                        .HasColumnType("bigint")
                        .HasColumnName("objectid");

                    b.Property<long?>("Objecttypeid")
                        .HasColumnType("bigint")
                        .HasColumnName("objecttypeid");

                    b.Property<int?>("Order")
                        .HasColumnType("integer");

                    b.Property<int?>("Tenantid")
                        .HasColumnType("integer")
                        .HasColumnName("tenantid");

                    b.Property<int?>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.ToTable((string)null);

                    b.ToView("getattachment", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HinCategory", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<bool?>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<string>("Name")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("name");

                    b.Property<int?>("Orderid")
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    b.Property<string>("Sitecode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("sitecode");

                    b.Property<int?>("Siteid")
                        .HasColumnType("integer")
                        .HasColumnName("siteid");

                    b.Property<string>("Typecode")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("typecode");

                    b.Property<int?>("Typeid")
                        .HasColumnType("integer")
                        .HasColumnName("typeid");

                    b.ToTable((string)null);

                    b.ToView("hin_category", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HinCategorydetail", b =>
                {
                    b.Property<string>("Categorycode")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("categorycode");

                    b.Property<int?>("Categoryid")
                        .HasColumnType("integer")
                        .HasColumnName("categoryid");

                    b.Property<string>("Code")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<bool?>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<string>("Name")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("name");

                    b.Property<int?>("Orderid")
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    b.Property<string>("Sitecode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("sitecode");

                    b.Property<int?>("Siteid")
                        .HasColumnType("integer")
                        .HasColumnName("siteid");

                    b.ToTable((string)null);

                    b.ToView("hin_categorydetail", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HinCity", b =>
                {
                    b.Property<string>("Citycode")
                        .HasColumnType("text")
                        .HasColumnName("citycode");

                    b.Property<int?>("Cityid")
                        .HasColumnType("integer")
                        .HasColumnName("cityid");

                    b.Property<string>("Cityname")
                        .HasColumnType("text")
                        .HasColumnName("cityname");

                    b.Property<string>("Indexid")
                        .HasColumnType("text")
                        .HasColumnName("indexid");

                    b.Property<bool?>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdelete")
                        .HasColumnType("boolean")
                        .HasColumnName("isdelete");

                    b.ToTable((string)null);

                    b.ToView("hin_cities", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HinDistrict", b =>
                {
                    b.Property<long?>("Cityid")
                        .HasColumnType("bigint")
                        .HasColumnName("cityid");

                    b.Property<int?>("Danso")
                        .HasColumnType("integer")
                        .HasColumnName("danso");

                    b.Property<string>("Districtcode")
                        .HasColumnType("text")
                        .HasColumnName("districtcode");

                    b.Property<int?>("Districtid")
                        .HasColumnType("integer")
                        .HasColumnName("districtid");

                    b.Property<string>("Districtname")
                        .HasColumnType("text")
                        .HasColumnName("districtname");

                    b.Property<bool?>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdelete")
                        .HasColumnType("boolean")
                        .HasColumnName("isdelete");

                    b.Property<int?>("Orderid")
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    b.ToTable((string)null);

                    b.ToView("hin_districts", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HinWard", b =>
                {
                    b.Property<long?>("Districtid")
                        .HasColumnType("bigint")
                        .HasColumnName("districtid");

                    b.Property<bool?>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdelete")
                        .HasColumnType("boolean")
                        .HasColumnName("isdelete");

                    b.Property<int?>("Orderid")
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    b.Property<string>("Wardcode")
                        .HasColumnType("text")
                        .HasColumnName("wardcode");

                    b.Property<int?>("Wardid")
                        .HasColumnType("integer")
                        .HasColumnName("wardid");

                    b.Property<string>("Wardname")
                        .HasColumnType("text")
                        .HasColumnName("wardname");

                    b.ToTable((string)null);

                    b.ToView("hin_wards", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsBooking", b =>
                {
                    b.Property<int>("Bookingid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("bookingid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Bookingid"));

                    b.Property<DateTime?>("Bookingdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("bookingdate");

                    b.Property<DateTime?>("Checkindate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("checkindate");

                    b.Property<DateTime?>("Checkoutdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("checkoutdate");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Customerid")
                        .HasColumnType("integer")
                        .HasColumnName("customerid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<double?>("Deposit")
                        .HasColumnType("double precision")
                        .HasColumnName("deposit");

                    b.Property<double?>("Discountpercent")
                        .HasColumnType("double precision")
                        .HasColumnName("discountpercent");

                    b.Property<bool?>("Isactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isdeleted");

                    b.Property<bool?>("Ispay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("ispay");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<double?>("Otherdiscountamount")
                        .HasColumnType("double precision")
                        .HasColumnName("otherdiscountamount");

                    b.Property<string>("Otherphonenumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("otherphonenumber");

                    b.Property<string>("Reasoncancel")
                        .HasColumnType("text")
                        .HasColumnName("reasoncancel");

                    b.Property<string>("Reasondiscount")
                        .HasColumnType("text")
                        .HasColumnName("reasondiscount");

                    b.Property<int?>("Roomid")
                        .HasColumnType("integer")
                        .HasColumnName("roomid");

                    b.Property<double?>("Totalamount")
                        .HasColumnType("double precision")
                        .HasColumnName("totalamount");

                    b.Property<double?>("Totaltime")
                        .HasColumnType("double precision")
                        .HasColumnName("totaltime");

                    b.Property<double?>("Unitprice")
                        .HasColumnType("double precision")
                        .HasColumnName("unitprice");

                    b.HasKey("Bookingid")
                        .HasName("pk__hs_booki__73951acdeb4a6008");

                    b.HasIndex(new[] { "Checkindate" }, "idx_nonclusteredindex_checkindate");

                    b.HasIndex(new[] { "Checkoutdate" }, "idx_nonclusteredindex_checkoutdate");

                    b.HasIndex(new[] { "Customerid" }, "idx_nonclusteredindex_customerid");

                    b.HasIndex(new[] { "Isactive" }, "idx_nonclusteredindex_isactive");

                    b.HasIndex(new[] { "Isdeleted" }, "idx_nonclusteredindex_isdeleted");

                    b.HasIndex(new[] { "Ispay" }, "idx_nonclusteredindex_ispay");

                    b.HasIndex(new[] { "Roomid" }, "idx_nonclusteredindex_roomid");

                    b.ToTable("hs_booking", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsBookingservice", b =>
                {
                    b.Property<int>("Bookingserviceid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("bookingserviceid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Bookingserviceid"));

                    b.Property<DateTime?>("Additionfromdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("additionfromdate");

                    b.Property<DateTime?>("Additiontodate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("additiontodate");

                    b.Property<int?>("Bookingid")
                        .HasColumnType("integer")
                        .HasColumnName("bookingid");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<bool?>("Isactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<int?>("Serviceid")
                        .HasColumnType("integer")
                        .HasColumnName("serviceid");

                    b.Property<double?>("Totalprice")
                        .HasColumnType("double precision")
                        .HasColumnName("totalprice");

                    b.HasKey("Bookingserviceid")
                        .HasName("pk__hs_booki__43f55cd171b565df");

                    b.HasIndex("Bookingid");

                    b.HasIndex("Serviceid");

                    b.ToTable("hs_bookingservice", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsChiphi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("content");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<DateTime?>("Expensedatetime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expensedatetime");

                    b.Property<bool?>("Isactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("isactive");

                    b.Property<bool?>("Ischeck")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("ischeck");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<double?>("Totalamount")
                        .HasColumnType("double precision")
                        .HasColumnName("totalamount");

                    b.HasKey("Id")
                        .HasName("pk__hs_chiph__3214ec07c7f42e9c");

                    b.ToTable("hs_chiphi", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsCustomer", b =>
                {
                    b.Property<int>("Customerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("customerid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Customerid"));

                    b.Property<string>("Cccd")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("cccd");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<DateTime?>("Dateofbirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dateofbirth");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("firstname");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("gender");

                    b.Property<bool?>("Isactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("lastname");

                    b.Property<string>("Mxh")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("mxh");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phonenumber");

                    b.HasKey("Customerid")
                        .HasName("pk__hs_custo__a4ae64b8304c97e3");

                    b.HasIndex(new[] { "Lastname" }, "idx_nonclusteredindex_hoten");

                    b.HasIndex(new[] { "Phonenumber" }, "idx_nonclusteredindex_phonenumber");

                    b.ToTable("hs_customer", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsDichvutheolich", b =>
                {
                    b.Property<int?>("Bookingid")
                        .HasColumnType("integer")
                        .HasColumnName("bookingid");

                    b.Property<string>("Listdichvu")
                        .HasColumnType("text")
                        .HasColumnName("listdichvu");

                    b.ToTable((string)null);

                    b.ToView("hs_dichvutheolich", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsHomestay", b =>
                {
                    b.Property<int>("Homestayid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("homestayid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Homestayid"));

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<bool?>("Isactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int?>("Ownerid")
                        .HasColumnType("integer")
                        .HasColumnName("ownerid");

                    b.HasKey("Homestayid")
                        .HasName("pk__hs_homes__edcb5cda4c5dec80");

                    b.HasIndex("Ownerid");

                    b.ToTable("hs_homestay", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsOwner", b =>
                {
                    b.Property<int>("Ownerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ownerid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Ownerid"));

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("firstname");

                    b.Property<bool?>("Isactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("lastname");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phonenumber");

                    b.HasKey("Ownerid")
                        .HasName("pk__hs_owner__81938598b243a403");

                    b.ToTable("hs_owner", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsPayment", b =>
                {
                    b.Property<int>("Paymentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("paymentid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Paymentid"));

                    b.Property<double?>("Amount")
                        .HasColumnType("double precision")
                        .HasColumnName("amount");

                    b.Property<int?>("Bookingid")
                        .HasColumnType("integer")
                        .HasColumnName("bookingid");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<bool?>("Isactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<DateTime?>("Paymentdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("paymentdate");

                    b.Property<string>("Paymentinformation")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("paymentinformation");

                    b.Property<string>("Paymentmethod")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("paymentmethod");

                    b.HasKey("Paymentid")
                        .HasName("pk__hs_payme__9b556a58fd157a61");

                    b.HasIndex("Bookingid");

                    b.ToTable("hs_payment", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsReview", b =>
                {
                    b.Property<int>("Reviewid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("reviewid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Reviewid"));

                    b.Property<string>("Comment")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Customerid")
                        .HasColumnType("integer")
                        .HasColumnName("customerid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<bool?>("Isactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<int?>("Rating")
                        .HasColumnType("integer")
                        .HasColumnName("rating");

                    b.Property<DateTime?>("Reviewdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("reviewdate");

                    b.Property<int?>("Roomid")
                        .HasColumnType("integer")
                        .HasColumnName("roomid");

                    b.HasKey("Reviewid")
                        .HasName("pk__hs_revie__74bc79aea8c7fe8b");

                    b.HasIndex("Customerid");

                    b.HasIndex("Roomid");

                    b.ToTable("hs_review", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsRoom", b =>
                {
                    b.Property<int>("Roomid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("roomid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Roomid"));

                    b.Property<string>("Badgeclass")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("badgeclass");

                    b.Property<string>("Color")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("color");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<int?>("Floor")
                        .HasColumnType("integer")
                        .HasColumnName("floor");

                    b.Property<int?>("Homestayid")
                        .HasColumnType("integer")
                        .HasColumnName("homestayid");

                    b.Property<bool?>("Isactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("Number")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("number");

                    b.Property<string>("Roomimage")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("roomimage");

                    b.HasKey("Roomid")
                        .HasName("pk__hs_room__328639198358319a");

                    b.HasIndex("Homestayid");

                    b.ToTable("hs_room", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsService", b =>
                {
                    b.Property<int>("Serviceid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("serviceid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Serviceid"));

                    b.Property<string>("Applydate")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("applydate");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<string>("Formula")
                        .HasColumnType("text")
                        .HasColumnName("formula");

                    b.Property<string>("Fromhour")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("fromhour");

                    b.Property<int?>("Intimerange")
                        .HasColumnType("integer")
                        .HasColumnName("intimerange");

                    b.Property<bool?>("Isactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isaddon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isaddon");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isdeleted");

                    b.Property<bool?>("Ishourservice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("ishourservice");

                    b.Property<bool?>("Ispricebyroom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("ispricebyroom");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int?>("Orderid")
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    b.Property<double?>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<string>("Serviceimage")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("serviceimage");

                    b.Property<string>("Tohour")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tohour");

                    b.HasKey("Serviceid")
                        .HasName("pk__hs_servi__c51bb0ea62a40f9b");

                    b.ToTable("hs_service", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsServiceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Information")
                        .HasColumnType("text")
                        .HasColumnName("information");

                    b.Property<bool?>("Isactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isdeleted");

                    b.Property<bool?>("Isread")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isread");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<int?>("Objectid")
                        .HasColumnType("integer")
                        .HasColumnName("objectid");

                    b.Property<string>("Tablename")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("tablename");

                    b.HasKey("Id")
                        .HasName("pk__hs_servi__3214ec07a38cb74e");

                    b.HasIndex(new[] { "Tablename", "Creationtime" }, "idx_ix_hs_service_history_tablename_creationtime");

                    b.HasIndex(new[] { "Tablename", "Isdeleted" }, "idx_ix_hs_service_history_tablename_isdeleted");

                    b.ToTable("hs_service_history", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsServicepricebyroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creationtime");

                    b.Property<int?>("Creatoruserid")
                        .HasColumnType("integer")
                        .HasColumnName("creatoruserid");

                    b.Property<int?>("Deleteuserid")
                        .HasColumnType("integer")
                        .HasColumnName("deleteuserid");

                    b.Property<DateTime?>("Deletiontime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deletiontime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<bool?>("Isactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isdeleted");

                    b.Property<DateTime?>("Lastmodificationtime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastmodificationtime");

                    b.Property<int?>("Lastmodifieruserid")
                        .HasColumnType("integer")
                        .HasColumnName("lastmodifieruserid");

                    b.Property<int?>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<int?>("Roomid")
                        .HasColumnType("integer")
                        .HasColumnName("roomid");

                    b.Property<int?>("Serviceid")
                        .HasColumnType("integer")
                        .HasColumnName("serviceid");

                    b.Property<decimal?>("Serviceprice")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("serviceprice");

                    b.HasKey("Id")
                        .HasName("pk__hs_servi__3214ec0782b239f1");

                    b.ToTable("hs_servicepricebyroom", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsThongtindatView", b =>
                {
                    b.Property<int?>("Bookingid")
                        .HasColumnType("integer")
                        .HasColumnName("bookingid");

                    b.Property<string>("Checkininfo")
                        .HasColumnType("text")
                        .HasColumnName("checkininfo");

                    b.Property<int?>("Customerid")
                        .HasColumnType("integer")
                        .HasColumnName("customerid");

                    b.Property<int?>("Roomid")
                        .HasColumnType("integer")
                        .HasColumnName("roomid");

                    b.ToTable((string)null);

                    b.ToView("hs_thongtindat_view", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.Nation", b =>
                {
                    b.Property<int>("Nationid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("nationid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Nationid"));

                    b.Property<bool?>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdelete")
                        .HasColumnType("boolean")
                        .HasColumnName("isdelete");

                    b.Property<string>("Nationcode")
                        .HasColumnType("text")
                        .HasColumnName("nationcode");

                    b.Property<string>("Nationname")
                        .HasColumnType("text")
                        .HasColumnName("nationname");

                    b.Property<int?>("Orderid")
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    b.HasKey("Nationid")
                        .HasName("pk_nations");

                    b.ToTable("nations", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.Nationality", b =>
                {
                    b.Property<int>("Nationalityid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("nationalityid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Nationalityid"));

                    b.Property<bool?>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdelete")
                        .HasColumnType("boolean")
                        .HasColumnName("isdelete");

                    b.Property<string>("Nationalitycode")
                        .HasColumnType("text")
                        .HasColumnName("nationalitycode");

                    b.Property<string>("Nationalityname")
                        .HasColumnType("text")
                        .HasColumnName("nationalityname");

                    b.Property<int?>("Orderid")
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    b.HasKey("Nationalityid")
                        .HasName("pk_nationalities");

                    b.ToTable("nationalities", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.Radioyesno", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.ToTable("radioyesno", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.Refreshtoken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Expiredat")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expiredat");

                    b.Property<bool?>("Isrevoked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isrevoked");

                    b.Property<DateTime?>("Issuedat")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("issuedat");

                    b.Property<bool?>("Isused")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("isused");

                    b.Property<string>("Jwtid")
                        .HasColumnType("text")
                        .HasColumnName("jwtid");

                    b.Property<string>("Token")
                        .HasColumnType("text")
                        .HasColumnName("token");

                    b.Property<long?>("Userid")
                        .HasColumnType("bigint")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("pk_refreshtoken");

                    b.ToTable("refreshtoken", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.Ward", b =>
                {
                    b.Property<int>("Wardid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("wardid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Wardid"));

                    b.Property<long?>("Districtid")
                        .HasColumnType("bigint")
                        .HasColumnName("districtid");

                    b.Property<bool?>("Isactive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<bool?>("Isdelete")
                        .HasColumnType("boolean")
                        .HasColumnName("isdelete");

                    b.Property<int?>("Orderid")
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    b.Property<string>("Wardcode")
                        .HasColumnType("text")
                        .HasColumnName("wardcode");

                    b.Property<string>("Wardname")
                        .HasColumnType("text")
                        .HasColumnName("wardname");

                    b.HasKey("Wardid")
                        .HasName("pk_wards");

                    b.HasIndex(new[] { "Districtid" }, "idx_ix_wards_districtid");

                    b.ToTable("wards", "dbo");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsBooking", b =>
                {
                    b.HasOne("KOAHome.EntityFramework.HsCustomer", "Customer")
                        .WithMany("HsBookings")
                        .HasForeignKey("Customerid")
                        .HasConstraintName("fk__hs_bookin__custo__2c578814");

                    b.HasOne("KOAHome.EntityFramework.HsRoom", "Room")
                        .WithMany("HsBookings")
                        .HasForeignKey("Roomid")
                        .HasConstraintName("fk__hs_bookin__roomi__2d4bac4d");

                    b.Navigation("Customer");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsBookingservice", b =>
                {
                    b.HasOne("KOAHome.EntityFramework.HsBooking", "Booking")
                        .WithMany("HsBookingservices")
                        .HasForeignKey("Bookingid")
                        .HasConstraintName("fk__hs_bookin__booki__36d51687");

                    b.HasOne("KOAHome.EntityFramework.HsService", "Service")
                        .WithMany("HsBookingservices")
                        .HasForeignKey("Serviceid")
                        .HasConstraintName("fk__hs_bookin__servi__48e80e73");

                    b.Navigation("Booking");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsHomestay", b =>
                {
                    b.HasOne("KOAHome.EntityFramework.HsOwner", "Owner")
                        .WithMany("HsHomestays")
                        .HasForeignKey("Ownerid")
                        .HasConstraintName("fk__hs_homest__owner__6aefe058");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsPayment", b =>
                {
                    b.HasOne("KOAHome.EntityFramework.HsBooking", "Booking")
                        .WithMany("HsPayments")
                        .HasForeignKey("Bookingid")
                        .HasConstraintName("fk__hs_paymen__booki__4246c933");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsReview", b =>
                {
                    b.HasOne("KOAHome.EntityFramework.HsCustomer", "Customer")
                        .WithMany("HsReviews")
                        .HasForeignKey("Customerid")
                        .HasConstraintName("fk__hs_review__custo__1844d718");

                    b.HasOne("KOAHome.EntityFramework.HsRoom", "Room")
                        .WithMany("HsReviews")
                        .HasForeignKey("Roomid")
                        .HasConstraintName("fk__hs_review__roomi__5535a963");

                    b.Navigation("Customer");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsRoom", b =>
                {
                    b.HasOne("KOAHome.EntityFramework.HsHomestay", "Homestay")
                        .WithMany("HsRooms")
                        .HasForeignKey("Homestayid")
                        .HasConstraintName("fk__hs_room__homesta__6cd828ca");

                    b.Navigation("Homestay");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsBooking", b =>
                {
                    b.Navigation("HsBookingservices");

                    b.Navigation("HsPayments");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsCustomer", b =>
                {
                    b.Navigation("HsBookings");

                    b.Navigation("HsReviews");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsHomestay", b =>
                {
                    b.Navigation("HsRooms");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsOwner", b =>
                {
                    b.Navigation("HsHomestays");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsRoom", b =>
                {
                    b.Navigation("HsBookings");

                    b.Navigation("HsReviews");
                });

            modelBuilder.Entity("KOAHome.EntityFramework.HsService", b =>
                {
                    b.Navigation("HsBookingservices");
                });
#pragma warning restore 612, 618
        }
    }
}
